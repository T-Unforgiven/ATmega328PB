
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00001368  000013fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001368  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000053  00800102  00800102  000013fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000013fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001430  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00001470  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000dfd  00000000  00000000  00001520  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a43  00000000  00000000  0000231d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000739  00000000  00000000  00002d60  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000380  00000000  00000000  0000349c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005ee  00000000  00000000  0000381c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007a0  00000000  00000000  00003e0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  000045aa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 9b 00 	jmp	0x136	; 0x136 <__ctors_end>
       4:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
       8:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
       c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      10:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      14:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      18:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      1c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      20:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      24:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      28:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      2c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      30:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      34:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      38:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      3c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      40:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      44:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      48:	0c 94 b3 02 	jmp	0x566	; 0x566 <__vector_18>
      4c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      50:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      54:	0c 94 92 03 	jmp	0x724	; 0x724 <__vector_21>
      58:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      5c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      60:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      64:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      68:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      6c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      70:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      74:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      78:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      7c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      80:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      84:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      88:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      8c:	0c 94 39 04 	jmp	0x872	; 0x872 <__vector_35>
      90:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      94:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      98:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      9c:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      a0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      a4:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      a8:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      ac:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      b0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__bad_interrupt>
      b4:	07 63       	ori	r16, 0x37	; 55
      b6:	42 36       	cpi	r20, 0x62	; 98
      b8:	b7 9b       	sbis	0x16, 7	; 22
      ba:	d8 a7       	std	Y+40, r29	; 0x28
      bc:	1a 39       	cpi	r17, 0x9A	; 154
      be:	68 56       	subi	r22, 0x68	; 104
      c0:	18 ae       	std	Y+56, r1	; 0x38
      c2:	ba ab       	std	Y+50, r27	; 0x32
      c4:	55 8c       	ldd	r5, Z+29	; 0x1d
      c6:	1d 3c       	cpi	r17, 0xCD	; 205
      c8:	b7 cc       	rjmp	.-1682   	; 0xfffffa38 <__eeprom_end+0xff7efa38>
      ca:	57 63       	ori	r21, 0x37	; 55
      cc:	bd 6d       	ori	r27, 0xDD	; 221
      ce:	ed fd       	.word	0xfded	; ????
      d0:	75 3e       	cpi	r23, 0xE5	; 229
      d2:	f6 17       	cp	r31, r22
      d4:	72 31       	cpi	r23, 0x12	; 18
      d6:	bf 00       	.word	0x00bf	; ????
      d8:	00 00       	nop
      da:	80 3f       	cpi	r24, 0xF0	; 240
      dc:	08 00       	.word	0x0008	; ????
      de:	00 00       	nop
      e0:	be 92       	st	-X, r11
      e2:	24 49       	sbci	r18, 0x94	; 148
      e4:	12 3e       	cpi	r17, 0xE2	; 226
      e6:	ab aa       	std	Y+51, r10	; 0x33
      e8:	aa 2a       	or	r10, r26
      ea:	be cd       	rjmp	.-1156   	; 0xfffffc68 <__eeprom_end+0xff7efc68>
      ec:	cc cc       	rjmp	.-1640   	; 0xfffffa86 <__eeprom_end+0xff7efa86>
      ee:	4c 3e       	cpi	r20, 0xEC	; 236
      f0:	00 00       	nop
      f2:	00 80       	ld	r0, Z
      f4:	be ab       	std	Y+54, r27	; 0x36
      f6:	aa aa       	std	Y+50, r10	; 0x32
      f8:	aa 3e       	cpi	r26, 0xEA	; 234
      fa:	00 00       	nop
      fc:	00 00       	nop
      fe:	bf 00       	.word	0x00bf	; ????
     100:	00 00       	nop
     102:	80 3f       	cpi	r24, 0xF0	; 240
     104:	00 00       	nop
     106:	00 00       	nop
     108:	00 08       	sbc	r0, r0
     10a:	41 78       	andi	r20, 0x81	; 129
     10c:	d3 bb       	out	0x13, r29	; 19
     10e:	43 87       	std	Z+11, r20	; 0x0b
     110:	d1 13       	cpse	r29, r17
     112:	3d 19       	sub	r19, r13
     114:	0e 3c       	cpi	r16, 0xCE	; 206
     116:	c3 bd       	out	0x23, r28	; 35
     118:	42 82       	std	Z+2, r4	; 0x02
     11a:	ad 2b       	or	r26, r29
     11c:	3e 68       	ori	r19, 0x8E	; 142
     11e:	ec 82       	std	Y+4, r14	; 0x04
     120:	76 be       	out	0x36, r7	; 54
     122:	d9 8f       	std	Y+25, r29	; 0x19
     124:	e1 a9       	ldd	r30, Z+49	; 0x31
     126:	3e 4c       	sbci	r19, 0xCE	; 206
     128:	80 ef       	ldi	r24, 0xF0	; 240
     12a:	ff be       	out	0x3f, r15	; 63
     12c:	01 c4       	rjmp	.+2050   	; 0x930 <main+0x1e>
     12e:	ff 7f       	andi	r31, 0xFF	; 255
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
	...

00000136 <__ctors_end>:
     136:	11 24       	eor	r1, r1
     138:	1f be       	out	0x3f, r1	; 63
     13a:	cf ef       	ldi	r28, 0xFF	; 255
     13c:	d8 e0       	ldi	r29, 0x08	; 8
     13e:	de bf       	out	0x3e, r29	; 62
     140:	cd bf       	out	0x3d, r28	; 61

00000142 <__do_copy_data>:
     142:	11 e0       	ldi	r17, 0x01	; 1
     144:	a0 e0       	ldi	r26, 0x00	; 0
     146:	b1 e0       	ldi	r27, 0x01	; 1
     148:	e8 e6       	ldi	r30, 0x68	; 104
     14a:	f3 e1       	ldi	r31, 0x13	; 19
     14c:	02 c0       	rjmp	.+4      	; 0x152 <__do_copy_data+0x10>
     14e:	05 90       	lpm	r0, Z+
     150:	0d 92       	st	X+, r0
     152:	a2 30       	cpi	r26, 0x02	; 2
     154:	b1 07       	cpc	r27, r17
     156:	d9 f7       	brne	.-10     	; 0x14e <__do_copy_data+0xc>

00000158 <__do_clear_bss>:
     158:	21 e0       	ldi	r18, 0x01	; 1
     15a:	a2 e0       	ldi	r26, 0x02	; 2
     15c:	b1 e0       	ldi	r27, 0x01	; 1
     15e:	01 c0       	rjmp	.+2      	; 0x162 <.do_clear_bss_start>

00000160 <.do_clear_bss_loop>:
     160:	1d 92       	st	X+, r1

00000162 <.do_clear_bss_start>:
     162:	a5 35       	cpi	r26, 0x55	; 85
     164:	b2 07       	cpc	r27, r18
     166:	e1 f7       	brne	.-8      	; 0x160 <.do_clear_bss_loop>
     168:	0e 94 89 04 	call	0x912	; 0x912 <main>
     16c:	0c 94 b2 09 	jmp	0x1364	; 0x1364 <_exit>

00000170 <__bad_interrupt>:
     170:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000174 <init_buf>:

void USART_send_data(uint8_t data){
	if(UCSR0A & (1 << 5)){
		UDR0 = data;
	}
}
     174:	cf 93       	push	r28
     176:	df 93       	push	r29
     178:	00 d0       	rcall	.+0      	; 0x17a <init_buf+0x6>
     17a:	cd b7       	in	r28, 0x3d	; 61
     17c:	de b7       	in	r29, 0x3e	; 62
     17e:	9a 83       	std	Y+2, r25	; 0x02
     180:	89 83       	std	Y+1, r24	; 0x01
     182:	89 81       	ldd	r24, Y+1	; 0x01
     184:	9a 81       	ldd	r25, Y+2	; 0x02
     186:	fc 01       	movw	r30, r24
     188:	10 82       	st	Z, r1
     18a:	89 81       	ldd	r24, Y+1	; 0x01
     18c:	9a 81       	ldd	r25, Y+2	; 0x02
     18e:	fc 01       	movw	r30, r24
     190:	11 82       	std	Z+1, r1	; 0x01
     192:	00 00       	nop
     194:	0f 90       	pop	r0
     196:	0f 90       	pop	r0
     198:	df 91       	pop	r29
     19a:	cf 91       	pop	r28
     19c:	08 95       	ret

0000019e <write_to_end>:
     19e:	cf 93       	push	r28
     1a0:	df 93       	push	r29
     1a2:	00 d0       	rcall	.+0      	; 0x1a4 <write_to_end+0x6>
     1a4:	1f 92       	push	r1
     1a6:	cd b7       	in	r28, 0x3d	; 61
     1a8:	de b7       	in	r29, 0x3e	; 62
     1aa:	9a 83       	std	Y+2, r25	; 0x02
     1ac:	89 83       	std	Y+1, r24	; 0x01
     1ae:	6b 83       	std	Y+3, r22	; 0x03
     1b0:	89 81       	ldd	r24, Y+1	; 0x01
     1b2:	9a 81       	ldd	r25, Y+2	; 0x02
     1b4:	fc 01       	movw	r30, r24
     1b6:	21 81       	ldd	r18, Z+1	; 0x01
     1b8:	31 e0       	ldi	r19, 0x01	; 1
     1ba:	32 0f       	add	r19, r18
     1bc:	89 81       	ldd	r24, Y+1	; 0x01
     1be:	9a 81       	ldd	r25, Y+2	; 0x02
     1c0:	fc 01       	movw	r30, r24
     1c2:	31 83       	std	Z+1, r19	; 0x01
     1c4:	82 2f       	mov	r24, r18
     1c6:	90 e0       	ldi	r25, 0x00	; 0
     1c8:	29 81       	ldd	r18, Y+1	; 0x01
     1ca:	3a 81       	ldd	r19, Y+2	; 0x02
     1cc:	82 0f       	add	r24, r18
     1ce:	93 1f       	adc	r25, r19
     1d0:	02 96       	adiw	r24, 0x02	; 2
     1d2:	2b 81       	ldd	r18, Y+3	; 0x03
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18
     1d8:	89 81       	ldd	r24, Y+1	; 0x01
     1da:	9a 81       	ldd	r25, Y+2	; 0x02
     1dc:	fc 01       	movw	r30, r24
     1de:	81 81       	ldd	r24, Z+1	; 0x01
     1e0:	80 32       	cpi	r24, 0x20	; 32
     1e2:	21 f4       	brne	.+8      	; 0x1ec <write_to_end+0x4e>
     1e4:	89 81       	ldd	r24, Y+1	; 0x01
     1e6:	9a 81       	ldd	r25, Y+2	; 0x02
     1e8:	fc 01       	movw	r30, r24
     1ea:	11 82       	std	Z+1, r1	; 0x01
     1ec:	00 00       	nop
     1ee:	0f 90       	pop	r0
     1f0:	0f 90       	pop	r0
     1f2:	0f 90       	pop	r0
     1f4:	df 91       	pop	r29
     1f6:	cf 91       	pop	r28
     1f8:	08 95       	ret

000001fa <read_from_begin>:
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	00 d0       	rcall	.+0      	; 0x200 <read_from_begin+0x6>
     200:	1f 92       	push	r1
     202:	cd b7       	in	r28, 0x3d	; 61
     204:	de b7       	in	r29, 0x3e	; 62
     206:	9b 83       	std	Y+3, r25	; 0x03
     208:	8a 83       	std	Y+2, r24	; 0x02
     20a:	8a 81       	ldd	r24, Y+2	; 0x02
     20c:	9b 81       	ldd	r25, Y+3	; 0x03
     20e:	fc 01       	movw	r30, r24
     210:	20 81       	ld	r18, Z
     212:	31 e0       	ldi	r19, 0x01	; 1
     214:	32 0f       	add	r19, r18
     216:	8a 81       	ldd	r24, Y+2	; 0x02
     218:	9b 81       	ldd	r25, Y+3	; 0x03
     21a:	fc 01       	movw	r30, r24
     21c:	30 83       	st	Z, r19
     21e:	82 2f       	mov	r24, r18
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	2a 81       	ldd	r18, Y+2	; 0x02
     224:	3b 81       	ldd	r19, Y+3	; 0x03
     226:	82 0f       	add	r24, r18
     228:	93 1f       	adc	r25, r19
     22a:	02 96       	adiw	r24, 0x02	; 2
     22c:	fc 01       	movw	r30, r24
     22e:	80 81       	ld	r24, Z
     230:	89 83       	std	Y+1, r24	; 0x01
     232:	8a 81       	ldd	r24, Y+2	; 0x02
     234:	9b 81       	ldd	r25, Y+3	; 0x03
     236:	fc 01       	movw	r30, r24
     238:	80 81       	ld	r24, Z
     23a:	80 32       	cpi	r24, 0x20	; 32
     23c:	21 f4       	brne	.+8      	; 0x246 <read_from_begin+0x4c>
     23e:	8a 81       	ldd	r24, Y+2	; 0x02
     240:	9b 81       	ldd	r25, Y+3	; 0x03
     242:	fc 01       	movw	r30, r24
     244:	10 82       	st	Z, r1
     246:	89 81       	ldd	r24, Y+1	; 0x01
     248:	0f 90       	pop	r0
     24a:	0f 90       	pop	r0
     24c:	0f 90       	pop	r0
     24e:	df 91       	pop	r29
     250:	cf 91       	pop	r28
     252:	08 95       	ret

00000254 <init_USART0>:
     254:	cf 93       	push	r28
     256:	df 93       	push	r29
     258:	cd b7       	in	r28, 0x3d	; 61
     25a:	de b7       	in	r29, 0x3e	; 62
     25c:	81 ec       	ldi	r24, 0xC1	; 193
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	21 ec       	ldi	r18, 0xC1	; 193
     262:	30 e0       	ldi	r19, 0x00	; 0
     264:	f9 01       	movw	r30, r18
     266:	20 81       	ld	r18, Z
     268:	28 69       	ori	r18, 0x98	; 152
     26a:	fc 01       	movw	r30, r24
     26c:	20 83       	st	Z, r18
     26e:	82 ec       	ldi	r24, 0xC2	; 194
     270:	90 e0       	ldi	r25, 0x00	; 0
     272:	22 ec       	ldi	r18, 0xC2	; 194
     274:	30 e0       	ldi	r19, 0x00	; 0
     276:	f9 01       	movw	r30, r18
     278:	20 81       	ld	r18, Z
     27a:	26 60       	ori	r18, 0x06	; 6
     27c:	fc 01       	movw	r30, r24
     27e:	20 83       	st	Z, r18
     280:	85 ec       	ldi	r24, 0xC5	; 197
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	fc 01       	movw	r30, r24
     286:	10 82       	st	Z, r1
     288:	84 ec       	ldi	r24, 0xC4	; 196
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	26 e6       	ldi	r18, 0x66	; 102
     28e:	fc 01       	movw	r30, r24
     290:	20 83       	st	Z, r18
     292:	78 94       	sei
     294:	00 00       	nop
     296:	df 91       	pop	r29
     298:	cf 91       	pop	r28
     29a:	08 95       	ret

0000029c <USART_recieve_data>:
     29c:	cf 93       	push	r28
     29e:	df 93       	push	r29
     2a0:	cd b7       	in	r28, 0x3d	; 61
     2a2:	de b7       	in	r29, 0x3e	; 62
     2a4:	86 ec       	ldi	r24, 0xC6	; 198
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	fc 01       	movw	r30, r24
     2aa:	80 81       	ld	r24, Z
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <analyze_start>:

void analyze_start(struct RingedBuffer* rb){
     2b2:	cf 93       	push	r28
     2b4:	df 93       	push	r29
     2b6:	00 d0       	rcall	.+0      	; 0x2b8 <analyze_start+0x6>
     2b8:	1f 92       	push	r1
     2ba:	cd b7       	in	r28, 0x3d	; 61
     2bc:	de b7       	in	r29, 0x3e	; 62
     2be:	9b 83       	std	Y+3, r25	; 0x03
     2c0:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t last_pos = rb->begin;
     2c2:	8a 81       	ldd	r24, Y+2	; 0x02
     2c4:	9b 81       	ldd	r25, Y+3	; 0x03
     2c6:	fc 01       	movw	r30, r24
     2c8:	80 81       	ld	r24, Z
     2ca:	89 83       	std	Y+1, r24	; 0x01
	if((read_from_begin(rb) == command_start) && (com_started == 0)){
     2cc:	8a 81       	ldd	r24, Y+2	; 0x02
     2ce:	9b 81       	ldd	r25, Y+3	; 0x03
     2d0:	0e 94 fd 00 	call	0x1fa	; 0x1fa <read_from_begin>
     2d4:	81 37       	cpi	r24, 0x71	; 113
     2d6:	41 f4       	brne	.+16     	; 0x2e8 <analyze_start+0x36>
     2d8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
     2dc:	88 23       	and	r24, r24
     2de:	21 f4       	brne	.+8      	; 0x2e8 <analyze_start+0x36>
		com_started = 1;
     2e0:	81 e0       	ldi	r24, 0x01	; 1
     2e2:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__data_end>
     2e6:	05 c0       	rjmp	.+10     	; 0x2f2 <analyze_start+0x40>
	}
	else{
		rb->begin = last_pos;
     2e8:	8a 81       	ldd	r24, Y+2	; 0x02
     2ea:	9b 81       	ldd	r25, Y+3	; 0x03
     2ec:	29 81       	ldd	r18, Y+1	; 0x01
     2ee:	fc 01       	movw	r30, r24
     2f0:	20 83       	st	Z, r18
	}
}
     2f2:	00 00       	nop
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	0f 90       	pop	r0
     2fa:	df 91       	pop	r29
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <set_u>:

void set_u(uint8_t* data, uint8_t l){
     300:	8f 92       	push	r8
     302:	9f 92       	push	r9
     304:	af 92       	push	r10
     306:	bf 92       	push	r11
     308:	cf 92       	push	r12
     30a:	df 92       	push	r13
     30c:	ef 92       	push	r14
     30e:	ff 92       	push	r15
     310:	cf 93       	push	r28
     312:	df 93       	push	r29
     314:	00 d0       	rcall	.+0      	; 0x316 <set_u+0x16>
     316:	00 d0       	rcall	.+0      	; 0x318 <set_u+0x18>
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	9b 83       	std	Y+3, r25	; 0x03
     31e:	8a 83       	std	Y+2, r24	; 0x02
     320:	6c 83       	std	Y+4, r22	; 0x04
	for (uint8_t i = 0; i < l; i++)
     322:	19 82       	std	Y+1, r1	; 0x01
     324:	60 c0       	rjmp	.+192    	; 0x3e6 <set_u+0xe6>
	{
		U += data[i]*pow(10, l-1-i);
     326:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <U>
     32a:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <U+0x1>
     32e:	cc 01       	movw	r24, r24
     330:	a0 e0       	ldi	r26, 0x00	; 0
     332:	b0 e0       	ldi	r27, 0x00	; 0
     334:	bc 01       	movw	r22, r24
     336:	cd 01       	movw	r24, r26
     338:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__floatunsisf>
     33c:	6b 01       	movw	r12, r22
     33e:	7c 01       	movw	r14, r24
     340:	89 81       	ldd	r24, Y+1	; 0x01
     342:	88 2f       	mov	r24, r24
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	2a 81       	ldd	r18, Y+2	; 0x02
     348:	3b 81       	ldd	r19, Y+3	; 0x03
     34a:	82 0f       	add	r24, r18
     34c:	93 1f       	adc	r25, r19
     34e:	fc 01       	movw	r30, r24
     350:	80 81       	ld	r24, Z
     352:	88 2f       	mov	r24, r24
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	09 2e       	mov	r0, r25
     358:	00 0c       	add	r0, r0
     35a:	aa 0b       	sbc	r26, r26
     35c:	bb 0b       	sbc	r27, r27
     35e:	bc 01       	movw	r22, r24
     360:	cd 01       	movw	r24, r26
     362:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     366:	4b 01       	movw	r8, r22
     368:	5c 01       	movw	r10, r24
     36a:	8c 81       	ldd	r24, Y+4	; 0x04
     36c:	88 2f       	mov	r24, r24
     36e:	90 e0       	ldi	r25, 0x00	; 0
     370:	9c 01       	movw	r18, r24
     372:	21 50       	subi	r18, 0x01	; 1
     374:	31 09       	sbc	r19, r1
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	88 2f       	mov	r24, r24
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	a9 01       	movw	r20, r18
     37e:	48 1b       	sub	r20, r24
     380:	59 0b       	sbc	r21, r25
     382:	ca 01       	movw	r24, r20
     384:	09 2e       	mov	r0, r25
     386:	00 0c       	add	r0, r0
     388:	aa 0b       	sbc	r26, r26
     38a:	bb 0b       	sbc	r27, r27
     38c:	bc 01       	movw	r22, r24
     38e:	cd 01       	movw	r24, r26
     390:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     394:	dc 01       	movw	r26, r24
     396:	cb 01       	movw	r24, r22
     398:	9c 01       	movw	r18, r24
     39a:	ad 01       	movw	r20, r26
     39c:	60 e0       	ldi	r22, 0x00	; 0
     39e:	70 e0       	ldi	r23, 0x00	; 0
     3a0:	80 e2       	ldi	r24, 0x20	; 32
     3a2:	91 e4       	ldi	r25, 0x41	; 65
     3a4:	0e 94 0a 08 	call	0x1014	; 0x1014 <pow>
     3a8:	dc 01       	movw	r26, r24
     3aa:	cb 01       	movw	r24, r22
     3ac:	9c 01       	movw	r18, r24
     3ae:	ad 01       	movw	r20, r26
     3b0:	c5 01       	movw	r24, r10
     3b2:	b4 01       	movw	r22, r8
     3b4:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__mulsf3>
     3b8:	dc 01       	movw	r26, r24
     3ba:	cb 01       	movw	r24, r22
     3bc:	9c 01       	movw	r18, r24
     3be:	ad 01       	movw	r20, r26
     3c0:	c7 01       	movw	r24, r14
     3c2:	b6 01       	movw	r22, r12
     3c4:	0e 94 02 06 	call	0xc04	; 0xc04 <__addsf3>
     3c8:	dc 01       	movw	r26, r24
     3ca:	cb 01       	movw	r24, r22
     3cc:	bc 01       	movw	r22, r24
     3ce:	cd 01       	movw	r24, r26
     3d0:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     3d4:	dc 01       	movw	r26, r24
     3d6:	cb 01       	movw	r24, r22
     3d8:	90 93 34 01 	sts	0x0134, r25	; 0x800134 <U+0x1>
     3dc:	80 93 33 01 	sts	0x0133, r24	; 0x800133 <U>
		rb->begin = last_pos;
	}
}

void set_u(uint8_t* data, uint8_t l){
	for (uint8_t i = 0; i < l; i++)
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	8f 5f       	subi	r24, 0xFF	; 255
     3e4:	89 83       	std	Y+1, r24	; 0x01
     3e6:	99 81       	ldd	r25, Y+1	; 0x01
     3e8:	8c 81       	ldd	r24, Y+4	; 0x04
     3ea:	98 17       	cp	r25, r24
     3ec:	08 f4       	brcc	.+2      	; 0x3f0 <set_u+0xf0>
     3ee:	9b cf       	rjmp	.-202    	; 0x326 <set_u+0x26>
	{
		U += data[i]*pow(10, l-1-i);
	}
}
     3f0:	00 00       	nop
     3f2:	0f 90       	pop	r0
     3f4:	0f 90       	pop	r0
     3f6:	0f 90       	pop	r0
     3f8:	0f 90       	pop	r0
     3fa:	df 91       	pop	r29
     3fc:	cf 91       	pop	r28
     3fe:	ff 90       	pop	r15
     400:	ef 90       	pop	r14
     402:	df 90       	pop	r13
     404:	cf 90       	pop	r12
     406:	bf 90       	pop	r11
     408:	af 90       	pop	r10
     40a:	9f 90       	pop	r9
     40c:	8f 90       	pop	r8
     40e:	08 95       	ret

00000410 <check_control_sum>:

uint8_t check_control_sum(uint8_t* input_data, uint8_t l1, uint8_t* input_sum, uint8_t l2){
     410:	8f 92       	push	r8
     412:	9f 92       	push	r9
     414:	af 92       	push	r10
     416:	bf 92       	push	r11
     418:	cf 92       	push	r12
     41a:	df 92       	push	r13
     41c:	ef 92       	push	r14
     41e:	ff 92       	push	r15
     420:	cf 93       	push	r28
     422:	df 93       	push	r29
     424:	cd b7       	in	r28, 0x3d	; 61
     426:	de b7       	in	r29, 0x3e	; 62
     428:	2a 97       	sbiw	r28, 0x0a	; 10
     42a:	0f b6       	in	r0, 0x3f	; 63
     42c:	f8 94       	cli
     42e:	de bf       	out	0x3e, r29	; 62
     430:	0f be       	out	0x3f, r0	; 63
     432:	cd bf       	out	0x3d, r28	; 61
     434:	9e 83       	std	Y+6, r25	; 0x06
     436:	8d 83       	std	Y+5, r24	; 0x05
     438:	6f 83       	std	Y+7, r22	; 0x07
     43a:	59 87       	std	Y+9, r21	; 0x09
     43c:	48 87       	std	Y+8, r20	; 0x08
     43e:	2a 87       	std	Y+10, r18	; 0x0a
	uint8_t sum1 = 0;
     440:	19 82       	std	Y+1, r1	; 0x01
	uint8_t sum2 = 0;
     442:	1a 82       	std	Y+2, r1	; 0x02
	for (uint8_t i = 0; i < l1; i++)
     444:	1b 82       	std	Y+3, r1	; 0x03
     446:	0f c0       	rjmp	.+30     	; 0x466 <check_control_sum+0x56>
	{
		sum1 += input_data[i];
     448:	8b 81       	ldd	r24, Y+3	; 0x03
     44a:	88 2f       	mov	r24, r24
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	2d 81       	ldd	r18, Y+5	; 0x05
     450:	3e 81       	ldd	r19, Y+6	; 0x06
     452:	82 0f       	add	r24, r18
     454:	93 1f       	adc	r25, r19
     456:	fc 01       	movw	r30, r24
     458:	80 81       	ld	r24, Z
     45a:	99 81       	ldd	r25, Y+1	; 0x01
     45c:	89 0f       	add	r24, r25
     45e:	89 83       	std	Y+1, r24	; 0x01
}

uint8_t check_control_sum(uint8_t* input_data, uint8_t l1, uint8_t* input_sum, uint8_t l2){
	uint8_t sum1 = 0;
	uint8_t sum2 = 0;
	for (uint8_t i = 0; i < l1; i++)
     460:	8b 81       	ldd	r24, Y+3	; 0x03
     462:	8f 5f       	subi	r24, 0xFF	; 255
     464:	8b 83       	std	Y+3, r24	; 0x03
     466:	9b 81       	ldd	r25, Y+3	; 0x03
     468:	8f 81       	ldd	r24, Y+7	; 0x07
     46a:	98 17       	cp	r25, r24
     46c:	68 f3       	brcs	.-38     	; 0x448 <check_control_sum+0x38>
	{
		sum1 += input_data[i];
	}
	for (uint8_t i = 0; i < l2; i++)
     46e:	1c 82       	std	Y+4, r1	; 0x04
     470:	5d c0       	rjmp	.+186    	; 0x52c <check_control_sum+0x11c>
	{
		sum2 += input_sum[i]*pow(10, l2-1-i);
     472:	8a 81       	ldd	r24, Y+2	; 0x02
     474:	88 2f       	mov	r24, r24
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	09 2e       	mov	r0, r25
     47a:	00 0c       	add	r0, r0
     47c:	aa 0b       	sbc	r26, r26
     47e:	bb 0b       	sbc	r27, r27
     480:	bc 01       	movw	r22, r24
     482:	cd 01       	movw	r24, r26
     484:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     488:	6b 01       	movw	r12, r22
     48a:	7c 01       	movw	r14, r24
     48c:	8c 81       	ldd	r24, Y+4	; 0x04
     48e:	88 2f       	mov	r24, r24
     490:	90 e0       	ldi	r25, 0x00	; 0
     492:	28 85       	ldd	r18, Y+8	; 0x08
     494:	39 85       	ldd	r19, Y+9	; 0x09
     496:	82 0f       	add	r24, r18
     498:	93 1f       	adc	r25, r19
     49a:	fc 01       	movw	r30, r24
     49c:	80 81       	ld	r24, Z
     49e:	88 2f       	mov	r24, r24
     4a0:	90 e0       	ldi	r25, 0x00	; 0
     4a2:	09 2e       	mov	r0, r25
     4a4:	00 0c       	add	r0, r0
     4a6:	aa 0b       	sbc	r26, r26
     4a8:	bb 0b       	sbc	r27, r27
     4aa:	bc 01       	movw	r22, r24
     4ac:	cd 01       	movw	r24, r26
     4ae:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     4b2:	4b 01       	movw	r8, r22
     4b4:	5c 01       	movw	r10, r24
     4b6:	8a 85       	ldd	r24, Y+10	; 0x0a
     4b8:	88 2f       	mov	r24, r24
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	9c 01       	movw	r18, r24
     4be:	21 50       	subi	r18, 0x01	; 1
     4c0:	31 09       	sbc	r19, r1
     4c2:	8c 81       	ldd	r24, Y+4	; 0x04
     4c4:	88 2f       	mov	r24, r24
     4c6:	90 e0       	ldi	r25, 0x00	; 0
     4c8:	a9 01       	movw	r20, r18
     4ca:	48 1b       	sub	r20, r24
     4cc:	59 0b       	sbc	r21, r25
     4ce:	ca 01       	movw	r24, r20
     4d0:	09 2e       	mov	r0, r25
     4d2:	00 0c       	add	r0, r0
     4d4:	aa 0b       	sbc	r26, r26
     4d6:	bb 0b       	sbc	r27, r27
     4d8:	bc 01       	movw	r22, r24
     4da:	cd 01       	movw	r24, r26
     4dc:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
     4e0:	dc 01       	movw	r26, r24
     4e2:	cb 01       	movw	r24, r22
     4e4:	9c 01       	movw	r18, r24
     4e6:	ad 01       	movw	r20, r26
     4e8:	60 e0       	ldi	r22, 0x00	; 0
     4ea:	70 e0       	ldi	r23, 0x00	; 0
     4ec:	80 e2       	ldi	r24, 0x20	; 32
     4ee:	91 e4       	ldi	r25, 0x41	; 65
     4f0:	0e 94 0a 08 	call	0x1014	; 0x1014 <pow>
     4f4:	dc 01       	movw	r26, r24
     4f6:	cb 01       	movw	r24, r22
     4f8:	9c 01       	movw	r18, r24
     4fa:	ad 01       	movw	r20, r26
     4fc:	c5 01       	movw	r24, r10
     4fe:	b4 01       	movw	r22, r8
     500:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__mulsf3>
     504:	dc 01       	movw	r26, r24
     506:	cb 01       	movw	r24, r22
     508:	9c 01       	movw	r18, r24
     50a:	ad 01       	movw	r20, r26
     50c:	c7 01       	movw	r24, r14
     50e:	b6 01       	movw	r22, r12
     510:	0e 94 02 06 	call	0xc04	; 0xc04 <__addsf3>
     514:	dc 01       	movw	r26, r24
     516:	cb 01       	movw	r24, r22
     518:	bc 01       	movw	r22, r24
     51a:	cd 01       	movw	r24, r26
     51c:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     520:	dc 01       	movw	r26, r24
     522:	cb 01       	movw	r24, r22
     524:	8a 83       	std	Y+2, r24	; 0x02
	uint8_t sum2 = 0;
	for (uint8_t i = 0; i < l1; i++)
	{
		sum1 += input_data[i];
	}
	for (uint8_t i = 0; i < l2; i++)
     526:	8c 81       	ldd	r24, Y+4	; 0x04
     528:	8f 5f       	subi	r24, 0xFF	; 255
     52a:	8c 83       	std	Y+4, r24	; 0x04
     52c:	9c 81       	ldd	r25, Y+4	; 0x04
     52e:	8a 85       	ldd	r24, Y+10	; 0x0a
     530:	98 17       	cp	r25, r24
     532:	08 f4       	brcc	.+2      	; 0x536 <check_control_sum+0x126>
     534:	9e cf       	rjmp	.-196    	; 0x472 <check_control_sum+0x62>
	{
		sum2 += input_sum[i]*pow(10, l2-1-i);
	}
	if(sum1 == sum2){
     536:	99 81       	ldd	r25, Y+1	; 0x01
     538:	8a 81       	ldd	r24, Y+2	; 0x02
     53a:	98 17       	cp	r25, r24
     53c:	11 f4       	brne	.+4      	; 0x542 <check_control_sum+0x132>
		return 1;
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	01 c0       	rjmp	.+2      	; 0x544 <check_control_sum+0x134>
	}
	return 0;
     542:	80 e0       	ldi	r24, 0x00	; 0
}
     544:	2a 96       	adiw	r28, 0x0a	; 10
     546:	0f b6       	in	r0, 0x3f	; 63
     548:	f8 94       	cli
     54a:	de bf       	out	0x3e, r29	; 62
     54c:	0f be       	out	0x3f, r0	; 63
     54e:	cd bf       	out	0x3d, r28	; 61
     550:	df 91       	pop	r29
     552:	cf 91       	pop	r28
     554:	ff 90       	pop	r15
     556:	ef 90       	pop	r14
     558:	df 90       	pop	r13
     55a:	cf 90       	pop	r12
     55c:	bf 90       	pop	r11
     55e:	af 90       	pop	r10
     560:	9f 90       	pop	r9
     562:	8f 90       	pop	r8
     564:	08 95       	ret

00000566 <__vector_18>:

ISR(USART0_RX_vect){
     566:	1f 92       	push	r1
     568:	0f 92       	push	r0
     56a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     56e:	0f 92       	push	r0
     570:	11 24       	eor	r1, r1
     572:	2f 93       	push	r18
     574:	3f 93       	push	r19
     576:	4f 93       	push	r20
     578:	5f 93       	push	r21
     57a:	6f 93       	push	r22
     57c:	7f 93       	push	r23
     57e:	8f 93       	push	r24
     580:	9f 93       	push	r25
     582:	af 93       	push	r26
     584:	bf 93       	push	r27
     586:	ef 93       	push	r30
     588:	ff 93       	push	r31
     58a:	cf 93       	push	r28
     58c:	df 93       	push	r29
     58e:	cd b7       	in	r28, 0x3d	; 61
     590:	de b7       	in	r29, 0x3e	; 62
	USART_data = USART_recieve_data();
     592:	0e 94 4e 01 	call	0x29c	; 0x29c <USART_recieve_data>
     596:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <USART_data>
	write_to_end(&input_buf, USART_data);
     59a:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <USART_data>
     59e:	68 2f       	mov	r22, r24
     5a0:	81 e1       	ldi	r24, 0x11	; 17
     5a2:	91 e0       	ldi	r25, 0x01	; 1
     5a4:	0e 94 cf 00 	call	0x19e	; 0x19e <write_to_end>
	if(com_started){
     5a8:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
     5ac:	88 23       	and	r24, r24
     5ae:	29 f0       	breq	.+10     	; 0x5ba <__vector_18+0x54>
		received++;
     5b0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <received>
     5b4:	8f 5f       	subi	r24, 0xFF	; 255
     5b6:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <received>
	}
}
     5ba:	00 00       	nop
     5bc:	df 91       	pop	r29
     5be:	cf 91       	pop	r28
     5c0:	ff 91       	pop	r31
     5c2:	ef 91       	pop	r30
     5c4:	bf 91       	pop	r27
     5c6:	af 91       	pop	r26
     5c8:	9f 91       	pop	r25
     5ca:	8f 91       	pop	r24
     5cc:	7f 91       	pop	r23
     5ce:	6f 91       	pop	r22
     5d0:	5f 91       	pop	r21
     5d2:	4f 91       	pop	r20
     5d4:	3f 91       	pop	r19
     5d6:	2f 91       	pop	r18
     5d8:	0f 90       	pop	r0
     5da:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     5de:	0f 90       	pop	r0
     5e0:	1f 90       	pop	r1
     5e2:	18 95       	reti

000005e4 <init_PWM>:

          /*PWM*/
		  
void init_PWM(){
     5e4:	cf 93       	push	r28
     5e6:	df 93       	push	r29
     5e8:	cd b7       	in	r28, 0x3d	; 61
     5ea:	de b7       	in	r29, 0x3e	; 62
	DDRB |= 1<<2;
     5ec:	84 e2       	ldi	r24, 0x24	; 36
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	24 e2       	ldi	r18, 0x24	; 36
     5f2:	30 e0       	ldi	r19, 0x00	; 0
     5f4:	f9 01       	movw	r30, r18
     5f6:	20 81       	ld	r18, Z
     5f8:	24 60       	ori	r18, 0x04	; 4
     5fa:	fc 01       	movw	r30, r24
     5fc:	20 83       	st	Z, r18
	PORTB &= ~(1<<2);
     5fe:	85 e2       	ldi	r24, 0x25	; 37
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	25 e2       	ldi	r18, 0x25	; 37
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	f9 01       	movw	r30, r18
     608:	20 81       	ld	r18, Z
     60a:	2b 7f       	andi	r18, 0xFB	; 251
     60c:	fc 01       	movw	r30, r24
     60e:	20 83       	st	Z, r18
	TCCR1A |= 1<<5; // OC1B non-inverting
     610:	80 e8       	ldi	r24, 0x80	; 128
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	20 e8       	ldi	r18, 0x80	; 128
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	f9 01       	movw	r30, r18
     61a:	20 81       	ld	r18, Z
     61c:	20 62       	ori	r18, 0x20	; 32
     61e:	fc 01       	movw	r30, r24
     620:	20 83       	st	Z, r18
	TCCR1A |= (1<<0) | (1<<1);
     622:	80 e8       	ldi	r24, 0x80	; 128
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	20 e8       	ldi	r18, 0x80	; 128
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	f9 01       	movw	r30, r18
     62c:	20 81       	ld	r18, Z
     62e:	23 60       	ori	r18, 0x03	; 3
     630:	fc 01       	movw	r30, r24
     632:	20 83       	st	Z, r18
	TCCR1B |= 1<<3; //fast PWM, 10 bit
     634:	81 e8       	ldi	r24, 0x81	; 129
     636:	90 e0       	ldi	r25, 0x00	; 0
     638:	21 e8       	ldi	r18, 0x81	; 129
     63a:	30 e0       	ldi	r19, 0x00	; 0
     63c:	f9 01       	movw	r30, r18
     63e:	20 81       	ld	r18, Z
     640:	28 60       	ori	r18, 0x08	; 8
     642:	fc 01       	movw	r30, r24
     644:	20 83       	st	Z, r18
	TCCR1B |= (1<<1); //psc = 8
     646:	81 e8       	ldi	r24, 0x81	; 129
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	21 e8       	ldi	r18, 0x81	; 129
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	f9 01       	movw	r30, r18
     650:	20 81       	ld	r18, Z
     652:	22 60       	ori	r18, 0x02	; 2
     654:	fc 01       	movw	r30, r24
     656:	20 83       	st	Z, r18
	OCR1B = 100;
     658:	8a e8       	ldi	r24, 0x8A	; 138
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	24 e6       	ldi	r18, 0x64	; 100
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	fc 01       	movw	r30, r24
     662:	31 83       	std	Z+1, r19	; 0x01
     664:	20 83       	st	Z, r18
}
     666:	00 00       	nop
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	08 95       	ret

0000066e <set_compare>:

void set_compare(uint16_t comp){
     66e:	cf 93       	push	r28
     670:	df 93       	push	r29
     672:	00 d0       	rcall	.+0      	; 0x674 <set_compare+0x6>
     674:	cd b7       	in	r28, 0x3d	; 61
     676:	de b7       	in	r29, 0x3e	; 62
     678:	9a 83       	std	Y+2, r25	; 0x02
     67a:	89 83       	std	Y+1, r24	; 0x01
	OCR1B = comp;
     67c:	8a e8       	ldi	r24, 0x8A	; 138
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	29 81       	ldd	r18, Y+1	; 0x01
     682:	3a 81       	ldd	r19, Y+2	; 0x02
     684:	fc 01       	movw	r30, r24
     686:	31 83       	std	Z+1, r19	; 0x01
     688:	20 83       	st	Z, r18
}
     68a:	00 00       	nop
     68c:	0f 90       	pop	r0
     68e:	0f 90       	pop	r0
     690:	df 91       	pop	r29
     692:	cf 91       	pop	r28
     694:	08 95       	ret

00000696 <init_ADC>:

        /*ADC*/
		
void init_ADC(){
     696:	cf 93       	push	r28
     698:	df 93       	push	r29
     69a:	cd b7       	in	r28, 0x3d	; 61
     69c:	de b7       	in	r29, 0x3e	; 62
	ADCSRA |= (1<<7); //enable
     69e:	8a e7       	ldi	r24, 0x7A	; 122
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	2a e7       	ldi	r18, 0x7A	; 122
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	f9 01       	movw	r30, r18
     6a8:	20 81       	ld	r18, Z
     6aa:	20 68       	ori	r18, 0x80	; 128
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18
	ADCSRA |= (1<<5); 
     6b0:	8a e7       	ldi	r24, 0x7A	; 122
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	2a e7       	ldi	r18, 0x7A	; 122
     6b6:	30 e0       	ldi	r19, 0x00	; 0
     6b8:	f9 01       	movw	r30, r18
     6ba:	20 81       	ld	r18, Z
     6bc:	20 62       	ori	r18, 0x20	; 32
     6be:	fc 01       	movw	r30, r24
     6c0:	20 83       	st	Z, r18
	ADCSRA |= (1<<3); //interrupt en
     6c2:	8a e7       	ldi	r24, 0x7A	; 122
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	2a e7       	ldi	r18, 0x7A	; 122
     6c8:	30 e0       	ldi	r19, 0x00	; 0
     6ca:	f9 01       	movw	r30, r18
     6cc:	20 81       	ld	r18, Z
     6ce:	28 60       	ori	r18, 0x08	; 8
     6d0:	fc 01       	movw	r30, r24
     6d2:	20 83       	st	Z, r18
	ADCSRA |= (1<<2) | (1<<1); //divide by 64 (250KHz)
     6d4:	8a e7       	ldi	r24, 0x7A	; 122
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	2a e7       	ldi	r18, 0x7A	; 122
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	f9 01       	movw	r30, r18
     6de:	20 81       	ld	r18, Z
     6e0:	26 60       	ori	r18, 0x06	; 6
     6e2:	fc 01       	movw	r30, r24
     6e4:	20 83       	st	Z, r18
	ADMUX |= (1<<7) | (1<<6); //internal source
     6e6:	8c e7       	ldi	r24, 0x7C	; 124
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	2c e7       	ldi	r18, 0x7C	; 124
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	f9 01       	movw	r30, r18
     6f0:	20 81       	ld	r18, Z
     6f2:	20 6c       	ori	r18, 0xC0	; 192
     6f4:	fc 01       	movw	r30, r24
     6f6:	20 83       	st	Z, r18
	ADMUX |= 1<<1; //using ADC2
     6f8:	8c e7       	ldi	r24, 0x7C	; 124
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	2c e7       	ldi	r18, 0x7C	; 124
     6fe:	30 e0       	ldi	r19, 0x00	; 0
     700:	f9 01       	movw	r30, r18
     702:	20 81       	ld	r18, Z
     704:	22 60       	ori	r18, 0x02	; 2
     706:	fc 01       	movw	r30, r24
     708:	20 83       	st	Z, r18
	ADCSRA |= 1<<6; //start 
     70a:	8a e7       	ldi	r24, 0x7A	; 122
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	2a e7       	ldi	r18, 0x7A	; 122
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	f9 01       	movw	r30, r18
     714:	20 81       	ld	r18, Z
     716:	20 64       	ori	r18, 0x40	; 64
     718:	fc 01       	movw	r30, r24
     71a:	20 83       	st	Z, r18
}
     71c:	00 00       	nop
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	08 95       	ret

00000724 <__vector_21>:

ISR(ADC_vect){
     724:	1f 92       	push	r1
     726:	0f 92       	push	r0
     728:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     72c:	0f 92       	push	r0
     72e:	11 24       	eor	r1, r1
     730:	2f 93       	push	r18
     732:	3f 93       	push	r19
     734:	4f 93       	push	r20
     736:	5f 93       	push	r21
     738:	6f 93       	push	r22
     73a:	7f 93       	push	r23
     73c:	8f 93       	push	r24
     73e:	9f 93       	push	r25
     740:	af 93       	push	r26
     742:	bf 93       	push	r27
     744:	ef 93       	push	r30
     746:	ff 93       	push	r31
     748:	cf 93       	push	r28
     74a:	df 93       	push	r29
     74c:	cd b7       	in	r28, 0x3d	; 61
     74e:	de b7       	in	r29, 0x3e	; 62
	adc_data = ((ADC*V_ref)/1024)*1000;
     750:	88 e7       	ldi	r24, 0x78	; 120
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	fc 01       	movw	r30, r24
     756:	80 81       	ld	r24, Z
     758:	91 81       	ldd	r25, Z+1	; 0x01
     75a:	cc 01       	movw	r24, r24
     75c:	a0 e0       	ldi	r26, 0x00	; 0
     75e:	b0 e0       	ldi	r27, 0x00	; 0
     760:	bc 01       	movw	r22, r24
     762:	cd 01       	movw	r24, r26
     764:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__floatunsisf>
     768:	dc 01       	movw	r26, r24
     76a:	cb 01       	movw	r24, r22
     76c:	2d ec       	ldi	r18, 0xCD	; 205
     76e:	3c ec       	ldi	r19, 0xCC	; 204
     770:	4c e8       	ldi	r20, 0x8C	; 140
     772:	5f e3       	ldi	r21, 0x3F	; 63
     774:	bc 01       	movw	r22, r24
     776:	cd 01       	movw	r24, r26
     778:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__mulsf3>
     77c:	dc 01       	movw	r26, r24
     77e:	cb 01       	movw	r24, r22
     780:	20 e0       	ldi	r18, 0x00	; 0
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	40 e8       	ldi	r20, 0x80	; 128
     786:	54 e4       	ldi	r21, 0x44	; 68
     788:	bc 01       	movw	r22, r24
     78a:	cd 01       	movw	r24, r26
     78c:	0e 94 6e 06 	call	0xcdc	; 0xcdc <__divsf3>
     790:	dc 01       	movw	r26, r24
     792:	cb 01       	movw	r24, r22
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	4a e7       	ldi	r20, 0x7A	; 122
     79a:	54 e4       	ldi	r21, 0x44	; 68
     79c:	bc 01       	movw	r22, r24
     79e:	cd 01       	movw	r24, r26
     7a0:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__mulsf3>
     7a4:	dc 01       	movw	r26, r24
     7a6:	cb 01       	movw	r24, r22
     7a8:	bc 01       	movw	r22, r24
     7aa:	cd 01       	movw	r24, r26
     7ac:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__fixunssfsi>
     7b0:	dc 01       	movw	r26, r24
     7b2:	cb 01       	movw	r24, r22
     7b4:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <adc_data+0x1>
     7b8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <adc_data>
}
     7bc:	00 00       	nop
     7be:	df 91       	pop	r29
     7c0:	cf 91       	pop	r28
     7c2:	ff 91       	pop	r31
     7c4:	ef 91       	pop	r30
     7c6:	bf 91       	pop	r27
     7c8:	af 91       	pop	r26
     7ca:	9f 91       	pop	r25
     7cc:	8f 91       	pop	r24
     7ce:	7f 91       	pop	r23
     7d0:	6f 91       	pop	r22
     7d2:	5f 91       	pop	r21
     7d4:	4f 91       	pop	r20
     7d6:	3f 91       	pop	r19
     7d8:	2f 91       	pop	r18
     7da:	0f 90       	pop	r0
     7dc:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     7e0:	0f 90       	pop	r0
     7e2:	1f 90       	pop	r1
     7e4:	18 95       	reti

000007e6 <init_LED_rx>:

		/*LEDs*/
		
void init_LED_rx(){
     7e6:	cf 93       	push	r28
     7e8:	df 93       	push	r29
     7ea:	cd b7       	in	r28, 0x3d	; 61
     7ec:	de b7       	in	r29, 0x3e	; 62
	DDRB |= 1<<4;
     7ee:	84 e2       	ldi	r24, 0x24	; 36
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	24 e2       	ldi	r18, 0x24	; 36
     7f4:	30 e0       	ldi	r19, 0x00	; 0
     7f6:	f9 01       	movw	r30, r18
     7f8:	20 81       	ld	r18, Z
     7fa:	20 61       	ori	r18, 0x10	; 16
     7fc:	fc 01       	movw	r30, r24
     7fe:	20 83       	st	Z, r18
	PORTB &= ~(1<<4);
     800:	85 e2       	ldi	r24, 0x25	; 37
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	25 e2       	ldi	r18, 0x25	; 37
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	f9 01       	movw	r30, r18
     80a:	20 81       	ld	r18, Z
     80c:	2f 7e       	andi	r18, 0xEF	; 239
     80e:	fc 01       	movw	r30, r24
     810:	20 83       	st	Z, r18
}
     812:	00 00       	nop
     814:	df 91       	pop	r29
     816:	cf 91       	pop	r28
     818:	08 95       	ret

0000081a <init_TIM3>:

void init_TIM3(){
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	cd b7       	in	r28, 0x3d	; 61
     820:	de b7       	in	r29, 0x3e	; 62
	DDRB |= (1<<5);
     822:	84 e2       	ldi	r24, 0x24	; 36
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	24 e2       	ldi	r18, 0x24	; 36
     828:	30 e0       	ldi	r19, 0x00	; 0
     82a:	f9 01       	movw	r30, r18
     82c:	20 81       	ld	r18, Z
     82e:	20 62       	ori	r18, 0x20	; 32
     830:	fc 01       	movw	r30, r24
     832:	20 83       	st	Z, r18
	PORTB &= ~(1<<5);
     834:	85 e2       	ldi	r24, 0x25	; 37
     836:	90 e0       	ldi	r25, 0x00	; 0
     838:	25 e2       	ldi	r18, 0x25	; 37
     83a:	30 e0       	ldi	r19, 0x00	; 0
     83c:	f9 01       	movw	r30, r18
     83e:	20 81       	ld	r18, Z
     840:	2f 7d       	andi	r18, 0xDF	; 223
     842:	fc 01       	movw	r30, r24
     844:	20 83       	st	Z, r18
	TCCR3B |= (1<<1) | (1<<0);
     846:	81 e9       	ldi	r24, 0x91	; 145
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	21 e9       	ldi	r18, 0x91	; 145
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	f9 01       	movw	r30, r18
     850:	20 81       	ld	r18, Z
     852:	23 60       	ori	r18, 0x03	; 3
     854:	fc 01       	movw	r30, r24
     856:	20 83       	st	Z, r18
	TIMSK3 |= 1<<0;
     858:	81 e7       	ldi	r24, 0x71	; 113
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	21 e7       	ldi	r18, 0x71	; 113
     85e:	30 e0       	ldi	r19, 0x00	; 0
     860:	f9 01       	movw	r30, r18
     862:	20 81       	ld	r18, Z
     864:	21 60       	ori	r18, 0x01	; 1
     866:	fc 01       	movw	r30, r24
     868:	20 83       	st	Z, r18
}
     86a:	00 00       	nop
     86c:	df 91       	pop	r29
     86e:	cf 91       	pop	r28
     870:	08 95       	ret

00000872 <__vector_35>:

ISR(TIMER3_OVF_vect){
     872:	1f 92       	push	r1
     874:	0f 92       	push	r0
     876:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     87a:	0f 92       	push	r0
     87c:	11 24       	eor	r1, r1
     87e:	2f 93       	push	r18
     880:	3f 93       	push	r19
     882:	8f 93       	push	r24
     884:	9f 93       	push	r25
     886:	ef 93       	push	r30
     888:	ff 93       	push	r31
     88a:	cf 93       	push	r28
     88c:	df 93       	push	r29
     88e:	cd b7       	in	r28, 0x3d	; 61
     890:	de b7       	in	r29, 0x3e	; 62
	if(five_Hz == 1){
     892:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     896:	81 30       	cpi	r24, 0x01	; 1
     898:	59 f4       	brne	.+22     	; 0x8b0 <__vector_35+0x3e>
		PORTB ^= (1<<5);
     89a:	85 e2       	ldi	r24, 0x25	; 37
     89c:	90 e0       	ldi	r25, 0x00	; 0
     89e:	25 e2       	ldi	r18, 0x25	; 37
     8a0:	30 e0       	ldi	r19, 0x00	; 0
     8a2:	f9 01       	movw	r30, r18
     8a4:	30 81       	ld	r19, Z
     8a6:	20 e2       	ldi	r18, 0x20	; 32
     8a8:	23 27       	eor	r18, r19
     8aa:	fc 01       	movw	r30, r24
     8ac:	20 83       	st	Z, r18
		if(one_Hz == 5){
			PORTB ^= (1<<5);
			one_Hz = 0;
		}
	}
}
     8ae:	15 c0       	rjmp	.+42     	; 0x8da <__vector_35+0x68>
ISR(TIMER3_OVF_vect){
	if(five_Hz == 1){
		PORTB ^= (1<<5);
	}
	else{
		one_Hz++;
     8b0:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <one_Hz>
     8b4:	8f 5f       	subi	r24, 0xFF	; 255
     8b6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <one_Hz>
		if(one_Hz == 5){
     8ba:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <one_Hz>
     8be:	85 30       	cpi	r24, 0x05	; 5
     8c0:	61 f4       	brne	.+24     	; 0x8da <__vector_35+0x68>
			PORTB ^= (1<<5);
     8c2:	85 e2       	ldi	r24, 0x25	; 37
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	25 e2       	ldi	r18, 0x25	; 37
     8c8:	30 e0       	ldi	r19, 0x00	; 0
     8ca:	f9 01       	movw	r30, r18
     8cc:	30 81       	ld	r19, Z
     8ce:	20 e2       	ldi	r18, 0x20	; 32
     8d0:	23 27       	eor	r18, r19
     8d2:	fc 01       	movw	r30, r24
     8d4:	20 83       	st	Z, r18
			one_Hz = 0;
     8d6:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <one_Hz>
		}
	}
}
     8da:	00 00       	nop
     8dc:	df 91       	pop	r29
     8de:	cf 91       	pop	r28
     8e0:	ff 91       	pop	r31
     8e2:	ef 91       	pop	r30
     8e4:	9f 91       	pop	r25
     8e6:	8f 91       	pop	r24
     8e8:	3f 91       	pop	r19
     8ea:	2f 91       	pop	r18
     8ec:	0f 90       	pop	r0
     8ee:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
     8f2:	0f 90       	pop	r0
     8f4:	1f 90       	pop	r1
     8f6:	18 95       	reti

000008f8 <delay_500us>:

void delay_500us(){
     8f8:	cf 93       	push	r28
     8fa:	df 93       	push	r29
     8fc:	00 d0       	rcall	.+0      	; 0x8fe <delay_500us+0x6>
     8fe:	cd b7       	in	r28, 0x3d	; 61
     900:	de b7       	in	r29, 0x3e	; 62
	for (int i = 0; i < 8000000; i++)
     902:	1a 82       	std	Y+2, r1	; 0x02
     904:	19 82       	std	Y+1, r1	; 0x01
     906:	89 81       	ldd	r24, Y+1	; 0x01
     908:	9a 81       	ldd	r25, Y+2	; 0x02
     90a:	01 96       	adiw	r24, 0x01	; 1
     90c:	9a 83       	std	Y+2, r25	; 0x02
     90e:	89 83       	std	Y+1, r24	; 0x01
	{
	}
     910:	fa cf       	rjmp	.-12     	; 0x906 <__stack+0x7>

00000912 <main>:
}


int main(void)
{
     912:	0f 93       	push	r16
     914:	1f 93       	push	r17
     916:	cf 93       	push	r28
     918:	df 93       	push	r29
     91a:	00 d0       	rcall	.+0      	; 0x91c <main+0xa>
     91c:	cd b7       	in	r28, 0x3d	; 61
     91e:	de b7       	in	r29, 0x3e	; 62
	init_USART0();
     920:	0e 94 2a 01 	call	0x254	; 0x254 <init_USART0>
	init_PWM();
     924:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <init_PWM>
	init_ADC();
     928:	0e 94 4b 03 	call	0x696	; 0x696 <init_ADC>
	init_LED_rx();
     92c:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <init_LED_rx>
	init_TIM3();
     930:	0e 94 0d 04 	call	0x81a	; 0x81a <init_TIM3>
	init_buf(&input_buf);
     934:	81 e1       	ldi	r24, 0x11	; 17
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	0e 94 ba 00 	call	0x174	; 0x174 <init_buf>
	uint8_t i = 0;
     93c:	19 82       	std	Y+1, r1	; 0x01
	uint8_t j = 0;
     93e:	1a 82       	std	Y+2, r1	; 0x02
    while (1) 
    {
		analyze_start(&input_buf);
     940:	81 e1       	ldi	r24, 0x11	; 17
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	0e 94 59 01 	call	0x2b2	; 0x2b2 <analyze_start>
		if(com_started == 1){
     948:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__data_end>
     94c:	81 30       	cpi	r24, 0x01	; 1
     94e:	09 f0       	breq	.+2      	; 0x952 <main+0x40>
     950:	ec c0       	rjmp	.+472    	; 0xb2a <main+0x218>
			if((received > 0) && (len == 0)){
     952:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <received>
     956:	88 23       	and	r24, r24
     958:	59 f0       	breq	.+22     	; 0x970 <main+0x5e>
     95a:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     95e:	88 23       	and	r24, r24
     960:	39 f4       	brne	.+14     	; 0x970 <main+0x5e>
				len = read_from_begin(&input_buf) - '0';
     962:	81 e1       	ldi	r24, 0x11	; 17
     964:	91 e0       	ldi	r25, 0x01	; 1
     966:	0e 94 fd 00 	call	0x1fa	; 0x1fa <read_from_begin>
     96a:	80 53       	subi	r24, 0x30	; 48
     96c:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <len>
			}
			if((received > len) && (i < len)){
     970:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <received>
     974:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     978:	89 17       	cp	r24, r25
     97a:	b0 f4       	brcc	.+44     	; 0x9a8 <main+0x96>
     97c:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     980:	99 81       	ldd	r25, Y+1	; 0x01
     982:	98 17       	cp	r25, r24
     984:	88 f4       	brcc	.+34     	; 0x9a8 <main+0x96>
				data_buffer[i] = read_from_begin(&input_buf) - '0';
     986:	89 81       	ldd	r24, Y+1	; 0x01
     988:	08 2f       	mov	r16, r24
     98a:	10 e0       	ldi	r17, 0x00	; 0
     98c:	81 e1       	ldi	r24, 0x11	; 17
     98e:	91 e0       	ldi	r25, 0x01	; 1
     990:	0e 94 fd 00 	call	0x1fa	; 0x1fa <read_from_begin>
     994:	20 ed       	ldi	r18, 0xD0	; 208
     996:	28 0f       	add	r18, r24
     998:	c8 01       	movw	r24, r16
     99a:	8b 5c       	subi	r24, 0xCB	; 203
     99c:	9e 4f       	sbci	r25, 0xFE	; 254
     99e:	fc 01       	movw	r30, r24
     9a0:	20 83       	st	Z, r18
				i++;
     9a2:	89 81       	ldd	r24, Y+1	; 0x01
     9a4:	8f 5f       	subi	r24, 0xFF	; 255
     9a6:	89 83       	std	Y+1, r24	; 0x01
			}
			if((received > len+2) && (j < 2) && (i == len)){
     9a8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <received>
     9ac:	28 2f       	mov	r18, r24
     9ae:	30 e0       	ldi	r19, 0x00	; 0
     9b0:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     9b4:	88 2f       	mov	r24, r24
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	02 96       	adiw	r24, 0x02	; 2
     9ba:	82 17       	cp	r24, r18
     9bc:	93 07       	cpc	r25, r19
     9be:	cc f4       	brge	.+50     	; 0x9f2 <main+0xe0>
     9c0:	8a 81       	ldd	r24, Y+2	; 0x02
     9c2:	82 30       	cpi	r24, 0x02	; 2
     9c4:	b0 f4       	brcc	.+44     	; 0x9f2 <main+0xe0>
     9c6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     9ca:	99 81       	ldd	r25, Y+1	; 0x01
     9cc:	98 17       	cp	r25, r24
     9ce:	89 f4       	brne	.+34     	; 0x9f2 <main+0xe0>
				sum_buffer[j] = read_from_begin(&input_buf) - '0';
     9d0:	8a 81       	ldd	r24, Y+2	; 0x02
     9d2:	08 2f       	mov	r16, r24
     9d4:	10 e0       	ldi	r17, 0x00	; 0
     9d6:	81 e1       	ldi	r24, 0x11	; 17
     9d8:	91 e0       	ldi	r25, 0x01	; 1
     9da:	0e 94 fd 00 	call	0x1fa	; 0x1fa <read_from_begin>
     9de:	20 ed       	ldi	r18, 0xD0	; 208
     9e0:	28 0f       	add	r18, r24
     9e2:	c8 01       	movw	r24, r16
     9e4:	82 5f       	subi	r24, 0xF2	; 242
     9e6:	9e 4f       	sbci	r25, 0xFE	; 254
     9e8:	fc 01       	movw	r30, r24
     9ea:	20 83       	st	Z, r18
				j++;
     9ec:	8a 81       	ldd	r24, Y+2	; 0x02
     9ee:	8f 5f       	subi	r24, 0xFF	; 255
     9f0:	8a 83       	std	Y+2, r24	; 0x02
			}
			if((i == len) && (j == 2)){
     9f2:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     9f6:	99 81       	ldd	r25, Y+1	; 0x01
     9f8:	98 17       	cp	r25, r24
     9fa:	09 f0       	breq	.+2      	; 0x9fe <main+0xec>
     9fc:	96 c0       	rjmp	.+300    	; 0xb2a <main+0x218>
     9fe:	8a 81       	ldd	r24, Y+2	; 0x02
     a00:	82 30       	cpi	r24, 0x02	; 2
     a02:	09 f0       	breq	.+2      	; 0xa06 <main+0xf4>
     a04:	92 c0       	rjmp	.+292    	; 0xb2a <main+0x218>
				if(check_control_sum(data_buffer, len, sum_buffer, 2)){
     a06:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     a0a:	22 e0       	ldi	r18, 0x02	; 2
     a0c:	4e e0       	ldi	r20, 0x0E	; 14
     a0e:	51 e0       	ldi	r21, 0x01	; 1
     a10:	68 2f       	mov	r22, r24
     a12:	85 e3       	ldi	r24, 0x35	; 53
     a14:	91 e0       	ldi	r25, 0x01	; 1
     a16:	0e 94 08 02 	call	0x410	; 0x410 <check_control_sum>
     a1a:	88 23       	and	r24, r24
     a1c:	09 f4       	brne	.+2      	; 0xa20 <main+0x10e>
     a1e:	63 c0       	rjmp	.+198    	; 0xae6 <main+0x1d4>
					set_u(data_buffer, len);
     a20:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <len>
     a24:	68 2f       	mov	r22, r24
     a26:	85 e3       	ldi	r24, 0x35	; 53
     a28:	91 e0       	ldi	r25, 0x01	; 1
     a2a:	0e 94 80 01 	call	0x300	; 0x300 <set_u>
					goal = (U/3300)*1024;
     a2e:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <U>
     a32:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <U+0x1>
     a36:	24 ee       	ldi	r18, 0xE4	; 228
     a38:	3c e0       	ldi	r19, 0x0C	; 12
     a3a:	b9 01       	movw	r22, r18
     a3c:	0e 94 8f 09 	call	0x131e	; 0x131e <__udivmodhi4>
     a40:	cb 01       	movw	r24, r22
     a42:	98 2f       	mov	r25, r24
     a44:	88 27       	eor	r24, r24
     a46:	99 0f       	add	r25, r25
     a48:	99 0f       	add	r25, r25
     a4a:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <goal+0x1>
     a4e:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <goal>
					up_U = U + ((U/100)*5);
     a52:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <U>
     a56:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <U+0x1>
     a5a:	96 95       	lsr	r25
     a5c:	87 95       	ror	r24
     a5e:	96 95       	lsr	r25
     a60:	87 95       	ror	r24
     a62:	9c 01       	movw	r18, r24
     a64:	ab e7       	ldi	r26, 0x7B	; 123
     a66:	b4 e1       	ldi	r27, 0x14	; 20
     a68:	0e 94 a3 09 	call	0x1346	; 0x1346 <__umulhisi3>
     a6c:	9c 01       	movw	r18, r24
     a6e:	36 95       	lsr	r19
     a70:	27 95       	ror	r18
     a72:	c9 01       	movw	r24, r18
     a74:	88 0f       	add	r24, r24
     a76:	99 1f       	adc	r25, r25
     a78:	88 0f       	add	r24, r24
     a7a:	99 1f       	adc	r25, r25
     a7c:	28 0f       	add	r18, r24
     a7e:	39 1f       	adc	r19, r25
     a80:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <U>
     a84:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <U+0x1>
     a88:	82 0f       	add	r24, r18
     a8a:	93 1f       	adc	r25, r19
     a8c:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <up_U+0x1>
     a90:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <up_U>
					low_U = U - ((U/100)*5);
     a94:	40 91 33 01 	lds	r20, 0x0133	; 0x800133 <U>
     a98:	50 91 34 01 	lds	r21, 0x0134	; 0x800134 <U+0x1>
     a9c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <U>
     aa0:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <U+0x1>
     aa4:	96 95       	lsr	r25
     aa6:	87 95       	ror	r24
     aa8:	96 95       	lsr	r25
     aaa:	87 95       	ror	r24
     aac:	9c 01       	movw	r18, r24
     aae:	ab e7       	ldi	r26, 0x7B	; 123
     ab0:	b4 e1       	ldi	r27, 0x14	; 20
     ab2:	0e 94 a3 09 	call	0x1346	; 0x1346 <__umulhisi3>
     ab6:	9c 01       	movw	r18, r24
     ab8:	36 95       	lsr	r19
     aba:	27 95       	ror	r18
     abc:	c9 01       	movw	r24, r18
     abe:	88 0f       	add	r24, r24
     ac0:	99 1f       	adc	r25, r25
     ac2:	88 0f       	add	r24, r24
     ac4:	99 1f       	adc	r25, r25
     ac6:	82 0f       	add	r24, r18
     ac8:	93 1f       	adc	r25, r19
     aca:	9a 01       	movw	r18, r20
     acc:	28 1b       	sub	r18, r24
     ace:	39 0b       	sbc	r19, r25
     ad0:	c9 01       	movw	r24, r18
     ad2:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <low_U+0x1>
     ad6:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <low_U>
					set_compare(goal);
     ada:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <goal>
     ade:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <goal+0x1>
     ae2:	0e 94 37 03 	call	0x66e	; 0x66e <set_compare>
				}
				com_started = 0;
     ae6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
				received = 0;
     aea:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <received>
				len = 0;
     aee:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <len>
				i = 0;
     af2:	19 82       	std	Y+1, r1	; 0x01
				j = 0;
     af4:	1a 82       	std	Y+2, r1	; 0x02
				U = 0;
     af6:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <U+0x1>
     afa:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <U>
				PORTB ^= (1<<4);
     afe:	85 e2       	ldi	r24, 0x25	; 37
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	25 e2       	ldi	r18, 0x25	; 37
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	f9 01       	movw	r30, r18
     b08:	30 81       	ld	r19, Z
     b0a:	20 e1       	ldi	r18, 0x10	; 16
     b0c:	23 27       	eor	r18, r19
     b0e:	fc 01       	movw	r30, r24
     b10:	20 83       	st	Z, r18
				delay_500us();
     b12:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <delay_500us>
				PORTB ^= (1<<4);
     b16:	85 e2       	ldi	r24, 0x25	; 37
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	25 e2       	ldi	r18, 0x25	; 37
     b1c:	30 e0       	ldi	r19, 0x00	; 0
     b1e:	f9 01       	movw	r30, r18
     b20:	30 81       	ld	r19, Z
     b22:	20 e1       	ldi	r18, 0x10	; 16
     b24:	23 27       	eor	r18, r19
     b26:	fc 01       	movw	r30, r24
     b28:	20 83       	st	Z, r18
			}
		}
		if((adc_data != 0) && (adc_data > up_U)){
     b2a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <adc_data>
     b2e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <adc_data+0x1>
     b32:	89 2b       	or	r24, r25
     b34:	f9 f0       	breq	.+62     	; 0xb74 <main+0x262>
     b36:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <adc_data>
     b3a:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <adc_data+0x1>
     b3e:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <up_U>
     b42:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <up_U+0x1>
     b46:	82 17       	cp	r24, r18
     b48:	93 07       	cpc	r25, r19
     b4a:	a0 f4       	brcc	.+40     	; 0xb74 <main+0x262>
			five_Hz = 1;
     b4c:	81 e0       	ldi	r24, 0x01	; 1
     b4e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			one_Hz = 0;
     b52:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <one_Hz>
			goal -= 10;
     b56:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <goal>
     b5a:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <goal+0x1>
     b5e:	0a 97       	sbiw	r24, 0x0a	; 10
     b60:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <goal+0x1>
     b64:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <goal>
			set_compare(goal);
     b68:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <goal>
     b6c:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <goal+0x1>
     b70:	0e 94 37 03 	call	0x66e	; 0x66e <set_compare>
		}
		if((adc_data != 0) && (adc_data < low_U)){
     b74:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <adc_data>
     b78:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <adc_data+0x1>
     b7c:	89 2b       	or	r24, r25
     b7e:	f9 f0       	breq	.+62     	; 0xbbe <main+0x2ac>
     b80:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <adc_data>
     b84:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <adc_data+0x1>
     b88:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <low_U>
     b8c:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <low_U+0x1>
     b90:	28 17       	cp	r18, r24
     b92:	39 07       	cpc	r19, r25
     b94:	a0 f4       	brcc	.+40     	; 0xbbe <main+0x2ac>
			five_Hz = 1;
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			one_Hz = 0;
     b9c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <one_Hz>
			goal += 10;
     ba0:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <goal>
     ba4:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <goal+0x1>
     ba8:	0a 96       	adiw	r24, 0x0a	; 10
     baa:	90 93 06 01 	sts	0x0106, r25	; 0x800106 <goal+0x1>
     bae:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <goal>
			set_compare(goal);
     bb2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <goal>
     bb6:	90 91 06 01 	lds	r25, 0x0106	; 0x800106 <goal+0x1>
     bba:	0e 94 37 03 	call	0x66e	; 0x66e <set_compare>
		}
		if((adc_data != 0) && (adc_data > low_U) && (adc_data < up_U)){
     bbe:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <adc_data>
     bc2:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <adc_data+0x1>
     bc6:	89 2b       	or	r24, r25
     bc8:	09 f4       	brne	.+2      	; 0xbcc <main+0x2ba>
     bca:	ba ce       	rjmp	.-652    	; 0x940 <main+0x2e>
     bcc:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <adc_data>
     bd0:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <adc_data+0x1>
     bd4:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <low_U>
     bd8:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <low_U+0x1>
     bdc:	82 17       	cp	r24, r18
     bde:	93 07       	cpc	r25, r19
     be0:	08 f0       	brcs	.+2      	; 0xbe4 <main+0x2d2>
     be2:	ae ce       	rjmp	.-676    	; 0x940 <main+0x2e>
     be4:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <adc_data>
     be8:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <adc_data+0x1>
     bec:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <up_U>
     bf0:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <up_U+0x1>
     bf4:	28 17       	cp	r18, r24
     bf6:	39 07       	cpc	r19, r25
     bf8:	08 f0       	brcs	.+2      	; 0xbfc <main+0x2ea>
     bfa:	a2 ce       	rjmp	.-700    	; 0x940 <main+0x2e>
			five_Hz = 0;
     bfc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
		}
    }
     c00:	9f ce       	rjmp	.-706    	; 0x940 <main+0x2e>

00000c02 <__subsf3>:
     c02:	50 58       	subi	r21, 0x80	; 128

00000c04 <__addsf3>:
     c04:	bb 27       	eor	r27, r27
     c06:	aa 27       	eor	r26, r26
     c08:	0e 94 19 06 	call	0xc32	; 0xc32 <__addsf3x>
     c0c:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_round>
     c10:	0e 94 55 07 	call	0xeaa	; 0xeaa <__fp_pscA>
     c14:	38 f0       	brcs	.+14     	; 0xc24 <__addsf3+0x20>
     c16:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_pscB>
     c1a:	20 f0       	brcs	.+8      	; 0xc24 <__addsf3+0x20>
     c1c:	39 f4       	brne	.+14     	; 0xc2c <__addsf3+0x28>
     c1e:	9f 3f       	cpi	r25, 0xFF	; 255
     c20:	19 f4       	brne	.+6      	; 0xc28 <__addsf3+0x24>
     c22:	26 f4       	brtc	.+8      	; 0xc2c <__addsf3+0x28>
     c24:	0c 94 52 07 	jmp	0xea4	; 0xea4 <__fp_nan>
     c28:	0e f4       	brtc	.+2      	; 0xc2c <__addsf3+0x28>
     c2a:	e0 95       	com	r30
     c2c:	e7 fb       	bst	r30, 7
     c2e:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>

00000c32 <__addsf3x>:
     c32:	e9 2f       	mov	r30, r25
     c34:	0e 94 74 07 	call	0xee8	; 0xee8 <__fp_split3>
     c38:	58 f3       	brcs	.-42     	; 0xc10 <__addsf3+0xc>
     c3a:	ba 17       	cp	r27, r26
     c3c:	62 07       	cpc	r22, r18
     c3e:	73 07       	cpc	r23, r19
     c40:	84 07       	cpc	r24, r20
     c42:	95 07       	cpc	r25, r21
     c44:	20 f0       	brcs	.+8      	; 0xc4e <__addsf3x+0x1c>
     c46:	79 f4       	brne	.+30     	; 0xc66 <__addsf3x+0x34>
     c48:	a6 f5       	brtc	.+104    	; 0xcb2 <__addsf3x+0x80>
     c4a:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__fp_zero>
     c4e:	0e f4       	brtc	.+2      	; 0xc52 <__addsf3x+0x20>
     c50:	e0 95       	com	r30
     c52:	0b 2e       	mov	r0, r27
     c54:	ba 2f       	mov	r27, r26
     c56:	a0 2d       	mov	r26, r0
     c58:	0b 01       	movw	r0, r22
     c5a:	b9 01       	movw	r22, r18
     c5c:	90 01       	movw	r18, r0
     c5e:	0c 01       	movw	r0, r24
     c60:	ca 01       	movw	r24, r20
     c62:	a0 01       	movw	r20, r0
     c64:	11 24       	eor	r1, r1
     c66:	ff 27       	eor	r31, r31
     c68:	59 1b       	sub	r21, r25
     c6a:	99 f0       	breq	.+38     	; 0xc92 <__addsf3x+0x60>
     c6c:	59 3f       	cpi	r21, 0xF9	; 249
     c6e:	50 f4       	brcc	.+20     	; 0xc84 <__addsf3x+0x52>
     c70:	50 3e       	cpi	r21, 0xE0	; 224
     c72:	68 f1       	brcs	.+90     	; 0xcce <__addsf3x+0x9c>
     c74:	1a 16       	cp	r1, r26
     c76:	f0 40       	sbci	r31, 0x00	; 0
     c78:	a2 2f       	mov	r26, r18
     c7a:	23 2f       	mov	r18, r19
     c7c:	34 2f       	mov	r19, r20
     c7e:	44 27       	eor	r20, r20
     c80:	58 5f       	subi	r21, 0xF8	; 248
     c82:	f3 cf       	rjmp	.-26     	; 0xc6a <__addsf3x+0x38>
     c84:	46 95       	lsr	r20
     c86:	37 95       	ror	r19
     c88:	27 95       	ror	r18
     c8a:	a7 95       	ror	r26
     c8c:	f0 40       	sbci	r31, 0x00	; 0
     c8e:	53 95       	inc	r21
     c90:	c9 f7       	brne	.-14     	; 0xc84 <__addsf3x+0x52>
     c92:	7e f4       	brtc	.+30     	; 0xcb2 <__addsf3x+0x80>
     c94:	1f 16       	cp	r1, r31
     c96:	ba 0b       	sbc	r27, r26
     c98:	62 0b       	sbc	r22, r18
     c9a:	73 0b       	sbc	r23, r19
     c9c:	84 0b       	sbc	r24, r20
     c9e:	ba f0       	brmi	.+46     	; 0xcce <__addsf3x+0x9c>
     ca0:	91 50       	subi	r25, 0x01	; 1
     ca2:	a1 f0       	breq	.+40     	; 0xccc <__addsf3x+0x9a>
     ca4:	ff 0f       	add	r31, r31
     ca6:	bb 1f       	adc	r27, r27
     ca8:	66 1f       	adc	r22, r22
     caa:	77 1f       	adc	r23, r23
     cac:	88 1f       	adc	r24, r24
     cae:	c2 f7       	brpl	.-16     	; 0xca0 <__addsf3x+0x6e>
     cb0:	0e c0       	rjmp	.+28     	; 0xcce <__addsf3x+0x9c>
     cb2:	ba 0f       	add	r27, r26
     cb4:	62 1f       	adc	r22, r18
     cb6:	73 1f       	adc	r23, r19
     cb8:	84 1f       	adc	r24, r20
     cba:	48 f4       	brcc	.+18     	; 0xcce <__addsf3x+0x9c>
     cbc:	87 95       	ror	r24
     cbe:	77 95       	ror	r23
     cc0:	67 95       	ror	r22
     cc2:	b7 95       	ror	r27
     cc4:	f7 95       	ror	r31
     cc6:	9e 3f       	cpi	r25, 0xFE	; 254
     cc8:	08 f0       	brcs	.+2      	; 0xccc <__addsf3x+0x9a>
     cca:	b0 cf       	rjmp	.-160    	; 0xc2c <__addsf3+0x28>
     ccc:	93 95       	inc	r25
     cce:	88 0f       	add	r24, r24
     cd0:	08 f0       	brcs	.+2      	; 0xcd4 <__addsf3x+0xa2>
     cd2:	99 27       	eor	r25, r25
     cd4:	ee 0f       	add	r30, r30
     cd6:	97 95       	ror	r25
     cd8:	87 95       	ror	r24
     cda:	08 95       	ret

00000cdc <__divsf3>:
     cdc:	0e 94 82 06 	call	0xd04	; 0xd04 <__divsf3x>
     ce0:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_round>
     ce4:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_pscB>
     ce8:	58 f0       	brcs	.+22     	; 0xd00 <__divsf3+0x24>
     cea:	0e 94 55 07 	call	0xeaa	; 0xeaa <__fp_pscA>
     cee:	40 f0       	brcs	.+16     	; 0xd00 <__divsf3+0x24>
     cf0:	29 f4       	brne	.+10     	; 0xcfc <__divsf3+0x20>
     cf2:	5f 3f       	cpi	r21, 0xFF	; 255
     cf4:	29 f0       	breq	.+10     	; 0xd00 <__divsf3+0x24>
     cf6:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>
     cfa:	51 11       	cpse	r21, r1
     cfc:	0c 94 97 07 	jmp	0xf2e	; 0xf2e <__fp_szero>
     d00:	0c 94 52 07 	jmp	0xea4	; 0xea4 <__fp_nan>

00000d04 <__divsf3x>:
     d04:	0e 94 74 07 	call	0xee8	; 0xee8 <__fp_split3>
     d08:	68 f3       	brcs	.-38     	; 0xce4 <__divsf3+0x8>

00000d0a <__divsf3_pse>:
     d0a:	99 23       	and	r25, r25
     d0c:	b1 f3       	breq	.-20     	; 0xcfa <__divsf3+0x1e>
     d0e:	55 23       	and	r21, r21
     d10:	91 f3       	breq	.-28     	; 0xcf6 <__divsf3+0x1a>
     d12:	95 1b       	sub	r25, r21
     d14:	55 0b       	sbc	r21, r21
     d16:	bb 27       	eor	r27, r27
     d18:	aa 27       	eor	r26, r26
     d1a:	62 17       	cp	r22, r18
     d1c:	73 07       	cpc	r23, r19
     d1e:	84 07       	cpc	r24, r20
     d20:	38 f0       	brcs	.+14     	; 0xd30 <__divsf3_pse+0x26>
     d22:	9f 5f       	subi	r25, 0xFF	; 255
     d24:	5f 4f       	sbci	r21, 0xFF	; 255
     d26:	22 0f       	add	r18, r18
     d28:	33 1f       	adc	r19, r19
     d2a:	44 1f       	adc	r20, r20
     d2c:	aa 1f       	adc	r26, r26
     d2e:	a9 f3       	breq	.-22     	; 0xd1a <__divsf3_pse+0x10>
     d30:	35 d0       	rcall	.+106    	; 0xd9c <__divsf3_pse+0x92>
     d32:	0e 2e       	mov	r0, r30
     d34:	3a f0       	brmi	.+14     	; 0xd44 <__divsf3_pse+0x3a>
     d36:	e0 e8       	ldi	r30, 0x80	; 128
     d38:	32 d0       	rcall	.+100    	; 0xd9e <__divsf3_pse+0x94>
     d3a:	91 50       	subi	r25, 0x01	; 1
     d3c:	50 40       	sbci	r21, 0x00	; 0
     d3e:	e6 95       	lsr	r30
     d40:	00 1c       	adc	r0, r0
     d42:	ca f7       	brpl	.-14     	; 0xd36 <__divsf3_pse+0x2c>
     d44:	2b d0       	rcall	.+86     	; 0xd9c <__divsf3_pse+0x92>
     d46:	fe 2f       	mov	r31, r30
     d48:	29 d0       	rcall	.+82     	; 0xd9c <__divsf3_pse+0x92>
     d4a:	66 0f       	add	r22, r22
     d4c:	77 1f       	adc	r23, r23
     d4e:	88 1f       	adc	r24, r24
     d50:	bb 1f       	adc	r27, r27
     d52:	26 17       	cp	r18, r22
     d54:	37 07       	cpc	r19, r23
     d56:	48 07       	cpc	r20, r24
     d58:	ab 07       	cpc	r26, r27
     d5a:	b0 e8       	ldi	r27, 0x80	; 128
     d5c:	09 f0       	breq	.+2      	; 0xd60 <__divsf3_pse+0x56>
     d5e:	bb 0b       	sbc	r27, r27
     d60:	80 2d       	mov	r24, r0
     d62:	bf 01       	movw	r22, r30
     d64:	ff 27       	eor	r31, r31
     d66:	93 58       	subi	r25, 0x83	; 131
     d68:	5f 4f       	sbci	r21, 0xFF	; 255
     d6a:	3a f0       	brmi	.+14     	; 0xd7a <__divsf3_pse+0x70>
     d6c:	9e 3f       	cpi	r25, 0xFE	; 254
     d6e:	51 05       	cpc	r21, r1
     d70:	78 f0       	brcs	.+30     	; 0xd90 <__divsf3_pse+0x86>
     d72:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>
     d76:	0c 94 97 07 	jmp	0xf2e	; 0xf2e <__fp_szero>
     d7a:	5f 3f       	cpi	r21, 0xFF	; 255
     d7c:	e4 f3       	brlt	.-8      	; 0xd76 <__divsf3_pse+0x6c>
     d7e:	98 3e       	cpi	r25, 0xE8	; 232
     d80:	d4 f3       	brlt	.-12     	; 0xd76 <__divsf3_pse+0x6c>
     d82:	86 95       	lsr	r24
     d84:	77 95       	ror	r23
     d86:	67 95       	ror	r22
     d88:	b7 95       	ror	r27
     d8a:	f7 95       	ror	r31
     d8c:	9f 5f       	subi	r25, 0xFF	; 255
     d8e:	c9 f7       	brne	.-14     	; 0xd82 <__divsf3_pse+0x78>
     d90:	88 0f       	add	r24, r24
     d92:	91 1d       	adc	r25, r1
     d94:	96 95       	lsr	r25
     d96:	87 95       	ror	r24
     d98:	97 f9       	bld	r25, 7
     d9a:	08 95       	ret
     d9c:	e1 e0       	ldi	r30, 0x01	; 1
     d9e:	66 0f       	add	r22, r22
     da0:	77 1f       	adc	r23, r23
     da2:	88 1f       	adc	r24, r24
     da4:	bb 1f       	adc	r27, r27
     da6:	62 17       	cp	r22, r18
     da8:	73 07       	cpc	r23, r19
     daa:	84 07       	cpc	r24, r20
     dac:	ba 07       	cpc	r27, r26
     dae:	20 f0       	brcs	.+8      	; 0xdb8 <__divsf3_pse+0xae>
     db0:	62 1b       	sub	r22, r18
     db2:	73 0b       	sbc	r23, r19
     db4:	84 0b       	sbc	r24, r20
     db6:	ba 0b       	sbc	r27, r26
     db8:	ee 1f       	adc	r30, r30
     dba:	88 f7       	brcc	.-30     	; 0xd9e <__divsf3_pse+0x94>
     dbc:	e0 95       	com	r30
     dbe:	08 95       	ret

00000dc0 <__fixunssfsi>:
     dc0:	0e 94 7c 07 	call	0xef8	; 0xef8 <__fp_splitA>
     dc4:	88 f0       	brcs	.+34     	; 0xde8 <__fixunssfsi+0x28>
     dc6:	9f 57       	subi	r25, 0x7F	; 127
     dc8:	98 f0       	brcs	.+38     	; 0xdf0 <__fixunssfsi+0x30>
     dca:	b9 2f       	mov	r27, r25
     dcc:	99 27       	eor	r25, r25
     dce:	b7 51       	subi	r27, 0x17	; 23
     dd0:	b0 f0       	brcs	.+44     	; 0xdfe <__fixunssfsi+0x3e>
     dd2:	e1 f0       	breq	.+56     	; 0xe0c <__fixunssfsi+0x4c>
     dd4:	66 0f       	add	r22, r22
     dd6:	77 1f       	adc	r23, r23
     dd8:	88 1f       	adc	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	1a f0       	brmi	.+6      	; 0xde4 <__fixunssfsi+0x24>
     dde:	ba 95       	dec	r27
     de0:	c9 f7       	brne	.-14     	; 0xdd4 <__fixunssfsi+0x14>
     de2:	14 c0       	rjmp	.+40     	; 0xe0c <__fixunssfsi+0x4c>
     de4:	b1 30       	cpi	r27, 0x01	; 1
     de6:	91 f0       	breq	.+36     	; 0xe0c <__fixunssfsi+0x4c>
     de8:	0e 94 96 07 	call	0xf2c	; 0xf2c <__fp_zero>
     dec:	b1 e0       	ldi	r27, 0x01	; 1
     dee:	08 95       	ret
     df0:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__fp_zero>
     df4:	67 2f       	mov	r22, r23
     df6:	78 2f       	mov	r23, r24
     df8:	88 27       	eor	r24, r24
     dfa:	b8 5f       	subi	r27, 0xF8	; 248
     dfc:	39 f0       	breq	.+14     	; 0xe0c <__fixunssfsi+0x4c>
     dfe:	b9 3f       	cpi	r27, 0xF9	; 249
     e00:	cc f3       	brlt	.-14     	; 0xdf4 <__fixunssfsi+0x34>
     e02:	86 95       	lsr	r24
     e04:	77 95       	ror	r23
     e06:	67 95       	ror	r22
     e08:	b3 95       	inc	r27
     e0a:	d9 f7       	brne	.-10     	; 0xe02 <__fixunssfsi+0x42>
     e0c:	3e f4       	brtc	.+14     	; 0xe1c <__fixunssfsi+0x5c>
     e0e:	90 95       	com	r25
     e10:	80 95       	com	r24
     e12:	70 95       	com	r23
     e14:	61 95       	neg	r22
     e16:	7f 4f       	sbci	r23, 0xFF	; 255
     e18:	8f 4f       	sbci	r24, 0xFF	; 255
     e1a:	9f 4f       	sbci	r25, 0xFF	; 255
     e1c:	08 95       	ret

00000e1e <__floatunsisf>:
     e1e:	e8 94       	clt
     e20:	09 c0       	rjmp	.+18     	; 0xe34 <__floatsisf+0x12>

00000e22 <__floatsisf>:
     e22:	97 fb       	bst	r25, 7
     e24:	3e f4       	brtc	.+14     	; 0xe34 <__floatsisf+0x12>
     e26:	90 95       	com	r25
     e28:	80 95       	com	r24
     e2a:	70 95       	com	r23
     e2c:	61 95       	neg	r22
     e2e:	7f 4f       	sbci	r23, 0xFF	; 255
     e30:	8f 4f       	sbci	r24, 0xFF	; 255
     e32:	9f 4f       	sbci	r25, 0xFF	; 255
     e34:	99 23       	and	r25, r25
     e36:	a9 f0       	breq	.+42     	; 0xe62 <__floatsisf+0x40>
     e38:	f9 2f       	mov	r31, r25
     e3a:	96 e9       	ldi	r25, 0x96	; 150
     e3c:	bb 27       	eor	r27, r27
     e3e:	93 95       	inc	r25
     e40:	f6 95       	lsr	r31
     e42:	87 95       	ror	r24
     e44:	77 95       	ror	r23
     e46:	67 95       	ror	r22
     e48:	b7 95       	ror	r27
     e4a:	f1 11       	cpse	r31, r1
     e4c:	f8 cf       	rjmp	.-16     	; 0xe3e <__floatsisf+0x1c>
     e4e:	fa f4       	brpl	.+62     	; 0xe8e <__floatsisf+0x6c>
     e50:	bb 0f       	add	r27, r27
     e52:	11 f4       	brne	.+4      	; 0xe58 <__floatsisf+0x36>
     e54:	60 ff       	sbrs	r22, 0
     e56:	1b c0       	rjmp	.+54     	; 0xe8e <__floatsisf+0x6c>
     e58:	6f 5f       	subi	r22, 0xFF	; 255
     e5a:	7f 4f       	sbci	r23, 0xFF	; 255
     e5c:	8f 4f       	sbci	r24, 0xFF	; 255
     e5e:	9f 4f       	sbci	r25, 0xFF	; 255
     e60:	16 c0       	rjmp	.+44     	; 0xe8e <__floatsisf+0x6c>
     e62:	88 23       	and	r24, r24
     e64:	11 f0       	breq	.+4      	; 0xe6a <__floatsisf+0x48>
     e66:	96 e9       	ldi	r25, 0x96	; 150
     e68:	11 c0       	rjmp	.+34     	; 0xe8c <__floatsisf+0x6a>
     e6a:	77 23       	and	r23, r23
     e6c:	21 f0       	breq	.+8      	; 0xe76 <__floatsisf+0x54>
     e6e:	9e e8       	ldi	r25, 0x8E	; 142
     e70:	87 2f       	mov	r24, r23
     e72:	76 2f       	mov	r23, r22
     e74:	05 c0       	rjmp	.+10     	; 0xe80 <__floatsisf+0x5e>
     e76:	66 23       	and	r22, r22
     e78:	71 f0       	breq	.+28     	; 0xe96 <__floatsisf+0x74>
     e7a:	96 e8       	ldi	r25, 0x86	; 134
     e7c:	86 2f       	mov	r24, r22
     e7e:	70 e0       	ldi	r23, 0x00	; 0
     e80:	60 e0       	ldi	r22, 0x00	; 0
     e82:	2a f0       	brmi	.+10     	; 0xe8e <__floatsisf+0x6c>
     e84:	9a 95       	dec	r25
     e86:	66 0f       	add	r22, r22
     e88:	77 1f       	adc	r23, r23
     e8a:	88 1f       	adc	r24, r24
     e8c:	da f7       	brpl	.-10     	; 0xe84 <__floatsisf+0x62>
     e8e:	88 0f       	add	r24, r24
     e90:	96 95       	lsr	r25
     e92:	87 95       	ror	r24
     e94:	97 f9       	bld	r25, 7
     e96:	08 95       	ret

00000e98 <__fp_inf>:
     e98:	97 f9       	bld	r25, 7
     e9a:	9f 67       	ori	r25, 0x7F	; 127
     e9c:	80 e8       	ldi	r24, 0x80	; 128
     e9e:	70 e0       	ldi	r23, 0x00	; 0
     ea0:	60 e0       	ldi	r22, 0x00	; 0
     ea2:	08 95       	ret

00000ea4 <__fp_nan>:
     ea4:	9f ef       	ldi	r25, 0xFF	; 255
     ea6:	80 ec       	ldi	r24, 0xC0	; 192
     ea8:	08 95       	ret

00000eaa <__fp_pscA>:
     eaa:	00 24       	eor	r0, r0
     eac:	0a 94       	dec	r0
     eae:	16 16       	cp	r1, r22
     eb0:	17 06       	cpc	r1, r23
     eb2:	18 06       	cpc	r1, r24
     eb4:	09 06       	cpc	r0, r25
     eb6:	08 95       	ret

00000eb8 <__fp_pscB>:
     eb8:	00 24       	eor	r0, r0
     eba:	0a 94       	dec	r0
     ebc:	12 16       	cp	r1, r18
     ebe:	13 06       	cpc	r1, r19
     ec0:	14 06       	cpc	r1, r20
     ec2:	05 06       	cpc	r0, r21
     ec4:	08 95       	ret

00000ec6 <__fp_round>:
     ec6:	09 2e       	mov	r0, r25
     ec8:	03 94       	inc	r0
     eca:	00 0c       	add	r0, r0
     ecc:	11 f4       	brne	.+4      	; 0xed2 <__fp_round+0xc>
     ece:	88 23       	and	r24, r24
     ed0:	52 f0       	brmi	.+20     	; 0xee6 <__fp_round+0x20>
     ed2:	bb 0f       	add	r27, r27
     ed4:	40 f4       	brcc	.+16     	; 0xee6 <__fp_round+0x20>
     ed6:	bf 2b       	or	r27, r31
     ed8:	11 f4       	brne	.+4      	; 0xede <__fp_round+0x18>
     eda:	60 ff       	sbrs	r22, 0
     edc:	04 c0       	rjmp	.+8      	; 0xee6 <__fp_round+0x20>
     ede:	6f 5f       	subi	r22, 0xFF	; 255
     ee0:	7f 4f       	sbci	r23, 0xFF	; 255
     ee2:	8f 4f       	sbci	r24, 0xFF	; 255
     ee4:	9f 4f       	sbci	r25, 0xFF	; 255
     ee6:	08 95       	ret

00000ee8 <__fp_split3>:
     ee8:	57 fd       	sbrc	r21, 7
     eea:	90 58       	subi	r25, 0x80	; 128
     eec:	44 0f       	add	r20, r20
     eee:	55 1f       	adc	r21, r21
     ef0:	59 f0       	breq	.+22     	; 0xf08 <__fp_splitA+0x10>
     ef2:	5f 3f       	cpi	r21, 0xFF	; 255
     ef4:	71 f0       	breq	.+28     	; 0xf12 <__fp_splitA+0x1a>
     ef6:	47 95       	ror	r20

00000ef8 <__fp_splitA>:
     ef8:	88 0f       	add	r24, r24
     efa:	97 fb       	bst	r25, 7
     efc:	99 1f       	adc	r25, r25
     efe:	61 f0       	breq	.+24     	; 0xf18 <__fp_splitA+0x20>
     f00:	9f 3f       	cpi	r25, 0xFF	; 255
     f02:	79 f0       	breq	.+30     	; 0xf22 <__fp_splitA+0x2a>
     f04:	87 95       	ror	r24
     f06:	08 95       	ret
     f08:	12 16       	cp	r1, r18
     f0a:	13 06       	cpc	r1, r19
     f0c:	14 06       	cpc	r1, r20
     f0e:	55 1f       	adc	r21, r21
     f10:	f2 cf       	rjmp	.-28     	; 0xef6 <__fp_split3+0xe>
     f12:	46 95       	lsr	r20
     f14:	f1 df       	rcall	.-30     	; 0xef8 <__fp_splitA>
     f16:	08 c0       	rjmp	.+16     	; 0xf28 <__fp_splitA+0x30>
     f18:	16 16       	cp	r1, r22
     f1a:	17 06       	cpc	r1, r23
     f1c:	18 06       	cpc	r1, r24
     f1e:	99 1f       	adc	r25, r25
     f20:	f1 cf       	rjmp	.-30     	; 0xf04 <__fp_splitA+0xc>
     f22:	86 95       	lsr	r24
     f24:	71 05       	cpc	r23, r1
     f26:	61 05       	cpc	r22, r1
     f28:	08 94       	sec
     f2a:	08 95       	ret

00000f2c <__fp_zero>:
     f2c:	e8 94       	clt

00000f2e <__fp_szero>:
     f2e:	bb 27       	eor	r27, r27
     f30:	66 27       	eor	r22, r22
     f32:	77 27       	eor	r23, r23
     f34:	cb 01       	movw	r24, r22
     f36:	97 f9       	bld	r25, 7
     f38:	08 95       	ret

00000f3a <__mulsf3>:
     f3a:	0e 94 b0 07 	call	0xf60	; 0xf60 <__mulsf3x>
     f3e:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_round>
     f42:	0e 94 55 07 	call	0xeaa	; 0xeaa <__fp_pscA>
     f46:	38 f0       	brcs	.+14     	; 0xf56 <__mulsf3+0x1c>
     f48:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <__fp_pscB>
     f4c:	20 f0       	brcs	.+8      	; 0xf56 <__mulsf3+0x1c>
     f4e:	95 23       	and	r25, r21
     f50:	11 f0       	breq	.+4      	; 0xf56 <__mulsf3+0x1c>
     f52:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>
     f56:	0c 94 52 07 	jmp	0xea4	; 0xea4 <__fp_nan>
     f5a:	11 24       	eor	r1, r1
     f5c:	0c 94 97 07 	jmp	0xf2e	; 0xf2e <__fp_szero>

00000f60 <__mulsf3x>:
     f60:	0e 94 74 07 	call	0xee8	; 0xee8 <__fp_split3>
     f64:	70 f3       	brcs	.-36     	; 0xf42 <__mulsf3+0x8>

00000f66 <__mulsf3_pse>:
     f66:	95 9f       	mul	r25, r21
     f68:	c1 f3       	breq	.-16     	; 0xf5a <__mulsf3+0x20>
     f6a:	95 0f       	add	r25, r21
     f6c:	50 e0       	ldi	r21, 0x00	; 0
     f6e:	55 1f       	adc	r21, r21
     f70:	62 9f       	mul	r22, r18
     f72:	f0 01       	movw	r30, r0
     f74:	72 9f       	mul	r23, r18
     f76:	bb 27       	eor	r27, r27
     f78:	f0 0d       	add	r31, r0
     f7a:	b1 1d       	adc	r27, r1
     f7c:	63 9f       	mul	r22, r19
     f7e:	aa 27       	eor	r26, r26
     f80:	f0 0d       	add	r31, r0
     f82:	b1 1d       	adc	r27, r1
     f84:	aa 1f       	adc	r26, r26
     f86:	64 9f       	mul	r22, r20
     f88:	66 27       	eor	r22, r22
     f8a:	b0 0d       	add	r27, r0
     f8c:	a1 1d       	adc	r26, r1
     f8e:	66 1f       	adc	r22, r22
     f90:	82 9f       	mul	r24, r18
     f92:	22 27       	eor	r18, r18
     f94:	b0 0d       	add	r27, r0
     f96:	a1 1d       	adc	r26, r1
     f98:	62 1f       	adc	r22, r18
     f9a:	73 9f       	mul	r23, r19
     f9c:	b0 0d       	add	r27, r0
     f9e:	a1 1d       	adc	r26, r1
     fa0:	62 1f       	adc	r22, r18
     fa2:	83 9f       	mul	r24, r19
     fa4:	a0 0d       	add	r26, r0
     fa6:	61 1d       	adc	r22, r1
     fa8:	22 1f       	adc	r18, r18
     faa:	74 9f       	mul	r23, r20
     fac:	33 27       	eor	r19, r19
     fae:	a0 0d       	add	r26, r0
     fb0:	61 1d       	adc	r22, r1
     fb2:	23 1f       	adc	r18, r19
     fb4:	84 9f       	mul	r24, r20
     fb6:	60 0d       	add	r22, r0
     fb8:	21 1d       	adc	r18, r1
     fba:	82 2f       	mov	r24, r18
     fbc:	76 2f       	mov	r23, r22
     fbe:	6a 2f       	mov	r22, r26
     fc0:	11 24       	eor	r1, r1
     fc2:	9f 57       	subi	r25, 0x7F	; 127
     fc4:	50 40       	sbci	r21, 0x00	; 0
     fc6:	9a f0       	brmi	.+38     	; 0xfee <__mulsf3_pse+0x88>
     fc8:	f1 f0       	breq	.+60     	; 0x1006 <__mulsf3_pse+0xa0>
     fca:	88 23       	and	r24, r24
     fcc:	4a f0       	brmi	.+18     	; 0xfe0 <__mulsf3_pse+0x7a>
     fce:	ee 0f       	add	r30, r30
     fd0:	ff 1f       	adc	r31, r31
     fd2:	bb 1f       	adc	r27, r27
     fd4:	66 1f       	adc	r22, r22
     fd6:	77 1f       	adc	r23, r23
     fd8:	88 1f       	adc	r24, r24
     fda:	91 50       	subi	r25, 0x01	; 1
     fdc:	50 40       	sbci	r21, 0x00	; 0
     fde:	a9 f7       	brne	.-22     	; 0xfca <__mulsf3_pse+0x64>
     fe0:	9e 3f       	cpi	r25, 0xFE	; 254
     fe2:	51 05       	cpc	r21, r1
     fe4:	80 f0       	brcs	.+32     	; 0x1006 <__mulsf3_pse+0xa0>
     fe6:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>
     fea:	0c 94 97 07 	jmp	0xf2e	; 0xf2e <__fp_szero>
     fee:	5f 3f       	cpi	r21, 0xFF	; 255
     ff0:	e4 f3       	brlt	.-8      	; 0xfea <__mulsf3_pse+0x84>
     ff2:	98 3e       	cpi	r25, 0xE8	; 232
     ff4:	d4 f3       	brlt	.-12     	; 0xfea <__mulsf3_pse+0x84>
     ff6:	86 95       	lsr	r24
     ff8:	77 95       	ror	r23
     ffa:	67 95       	ror	r22
     ffc:	b7 95       	ror	r27
     ffe:	f7 95       	ror	r31
    1000:	e7 95       	ror	r30
    1002:	9f 5f       	subi	r25, 0xFF	; 255
    1004:	c1 f7       	brne	.-16     	; 0xff6 <__mulsf3_pse+0x90>
    1006:	fe 2b       	or	r31, r30
    1008:	88 0f       	add	r24, r24
    100a:	91 1d       	adc	r25, r1
    100c:	96 95       	lsr	r25
    100e:	87 95       	ror	r24
    1010:	97 f9       	bld	r25, 7
    1012:	08 95       	ret

00001014 <pow>:
    1014:	fa 01       	movw	r30, r20
    1016:	ee 0f       	add	r30, r30
    1018:	ff 1f       	adc	r31, r31
    101a:	30 96       	adiw	r30, 0x00	; 0
    101c:	21 05       	cpc	r18, r1
    101e:	31 05       	cpc	r19, r1
    1020:	a1 f1       	breq	.+104    	; 0x108a <pow+0x76>
    1022:	61 15       	cp	r22, r1
    1024:	71 05       	cpc	r23, r1
    1026:	61 f4       	brne	.+24     	; 0x1040 <pow+0x2c>
    1028:	80 38       	cpi	r24, 0x80	; 128
    102a:	bf e3       	ldi	r27, 0x3F	; 63
    102c:	9b 07       	cpc	r25, r27
    102e:	49 f1       	breq	.+82     	; 0x1082 <pow+0x6e>
    1030:	68 94       	set
    1032:	90 38       	cpi	r25, 0x80	; 128
    1034:	81 05       	cpc	r24, r1
    1036:	61 f0       	breq	.+24     	; 0x1050 <pow+0x3c>
    1038:	80 38       	cpi	r24, 0x80	; 128
    103a:	bf ef       	ldi	r27, 0xFF	; 255
    103c:	9b 07       	cpc	r25, r27
    103e:	41 f0       	breq	.+16     	; 0x1050 <pow+0x3c>
    1040:	99 23       	and	r25, r25
    1042:	4a f5       	brpl	.+82     	; 0x1096 <pow+0x82>
    1044:	ff 3f       	cpi	r31, 0xFF	; 255
    1046:	e1 05       	cpc	r30, r1
    1048:	31 05       	cpc	r19, r1
    104a:	21 05       	cpc	r18, r1
    104c:	19 f1       	breq	.+70     	; 0x1094 <pow+0x80>
    104e:	e8 94       	clt
    1050:	08 94       	sec
    1052:	e7 95       	ror	r30
    1054:	d9 01       	movw	r26, r18
    1056:	aa 23       	and	r26, r26
    1058:	29 f4       	brne	.+10     	; 0x1064 <pow+0x50>
    105a:	ab 2f       	mov	r26, r27
    105c:	be 2f       	mov	r27, r30
    105e:	f8 5f       	subi	r31, 0xF8	; 248
    1060:	d0 f3       	brcs	.-12     	; 0x1056 <pow+0x42>
    1062:	10 c0       	rjmp	.+32     	; 0x1084 <pow+0x70>
    1064:	ff 5f       	subi	r31, 0xFF	; 255
    1066:	70 f4       	brcc	.+28     	; 0x1084 <pow+0x70>
    1068:	a6 95       	lsr	r26
    106a:	e0 f7       	brcc	.-8      	; 0x1064 <pow+0x50>
    106c:	f7 39       	cpi	r31, 0x97	; 151
    106e:	50 f0       	brcs	.+20     	; 0x1084 <pow+0x70>
    1070:	19 f0       	breq	.+6      	; 0x1078 <pow+0x64>
    1072:	ff 3a       	cpi	r31, 0xAF	; 175
    1074:	38 f4       	brcc	.+14     	; 0x1084 <pow+0x70>
    1076:	9f 77       	andi	r25, 0x7F	; 127
    1078:	9f 93       	push	r25
    107a:	0d d0       	rcall	.+26     	; 0x1096 <pow+0x82>
    107c:	0f 90       	pop	r0
    107e:	07 fc       	sbrc	r0, 7
    1080:	90 58       	subi	r25, 0x80	; 128
    1082:	08 95       	ret
    1084:	46 f0       	brts	.+16     	; 0x1096 <pow+0x82>
    1086:	0c 94 52 07 	jmp	0xea4	; 0xea4 <__fp_nan>
    108a:	60 e0       	ldi	r22, 0x00	; 0
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	80 e8       	ldi	r24, 0x80	; 128
    1090:	9f e3       	ldi	r25, 0x3F	; 63
    1092:	08 95       	ret
    1094:	4f e7       	ldi	r20, 0x7F	; 127
    1096:	9f 77       	andi	r25, 0x7F	; 127
    1098:	5f 93       	push	r21
    109a:	4f 93       	push	r20
    109c:	3f 93       	push	r19
    109e:	2f 93       	push	r18
    10a0:	0e 94 05 09 	call	0x120a	; 0x120a <log>
    10a4:	2f 91       	pop	r18
    10a6:	3f 91       	pop	r19
    10a8:	4f 91       	pop	r20
    10aa:	5f 91       	pop	r21
    10ac:	0e 94 9d 07 	call	0xf3a	; 0xf3a <__mulsf3>
    10b0:	0c 94 62 08 	jmp	0x10c4	; 0x10c4 <exp>
    10b4:	29 f4       	brne	.+10     	; 0x10c0 <pow+0xac>
    10b6:	16 f0       	brts	.+4      	; 0x10bc <pow+0xa8>
    10b8:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>
    10bc:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__fp_zero>
    10c0:	0c 94 52 07 	jmp	0xea4	; 0xea4 <__fp_nan>

000010c4 <exp>:
    10c4:	0e 94 7c 07 	call	0xef8	; 0xef8 <__fp_splitA>
    10c8:	a8 f3       	brcs	.-22     	; 0x10b4 <pow+0xa0>
    10ca:	96 38       	cpi	r25, 0x86	; 134
    10cc:	a0 f7       	brcc	.-24     	; 0x10b6 <pow+0xa2>
    10ce:	07 f8       	bld	r0, 7
    10d0:	0f 92       	push	r0
    10d2:	e8 94       	clt
    10d4:	2b e3       	ldi	r18, 0x3B	; 59
    10d6:	3a ea       	ldi	r19, 0xAA	; 170
    10d8:	48 eb       	ldi	r20, 0xB8	; 184
    10da:	5f e7       	ldi	r21, 0x7F	; 127
    10dc:	0e 94 b3 07 	call	0xf66	; 0xf66 <__mulsf3_pse>
    10e0:	0f 92       	push	r0
    10e2:	0f 92       	push	r0
    10e4:	0f 92       	push	r0
    10e6:	4d b7       	in	r20, 0x3d	; 61
    10e8:	5e b7       	in	r21, 0x3e	; 62
    10ea:	0f 92       	push	r0
    10ec:	0e 94 4d 09 	call	0x129a	; 0x129a <modf>
    10f0:	e4 eb       	ldi	r30, 0xB4	; 180
    10f2:	f0 e0       	ldi	r31, 0x00	; 0
    10f4:	0e 94 94 08 	call	0x1128	; 0x1128 <__fp_powser>
    10f8:	4f 91       	pop	r20
    10fa:	5f 91       	pop	r21
    10fc:	ef 91       	pop	r30
    10fe:	ff 91       	pop	r31
    1100:	e5 95       	asr	r30
    1102:	ee 1f       	adc	r30, r30
    1104:	ff 1f       	adc	r31, r31
    1106:	49 f0       	breq	.+18     	; 0x111a <exp+0x56>
    1108:	fe 57       	subi	r31, 0x7E	; 126
    110a:	e0 68       	ori	r30, 0x80	; 128
    110c:	44 27       	eor	r20, r20
    110e:	ee 0f       	add	r30, r30
    1110:	44 1f       	adc	r20, r20
    1112:	fa 95       	dec	r31
    1114:	e1 f7       	brne	.-8      	; 0x110e <exp+0x4a>
    1116:	41 95       	neg	r20
    1118:	55 0b       	sbc	r21, r21
    111a:	0e 94 c7 08 	call	0x118e	; 0x118e <ldexp>
    111e:	0f 90       	pop	r0
    1120:	07 fe       	sbrs	r0, 7
    1122:	0c 94 bb 08 	jmp	0x1176	; 0x1176 <inverse>
    1126:	08 95       	ret

00001128 <__fp_powser>:
    1128:	df 93       	push	r29
    112a:	cf 93       	push	r28
    112c:	1f 93       	push	r17
    112e:	0f 93       	push	r16
    1130:	ff 92       	push	r15
    1132:	ef 92       	push	r14
    1134:	df 92       	push	r13
    1136:	7b 01       	movw	r14, r22
    1138:	8c 01       	movw	r16, r24
    113a:	68 94       	set
    113c:	06 c0       	rjmp	.+12     	; 0x114a <__fp_powser+0x22>
    113e:	da 2e       	mov	r13, r26
    1140:	ef 01       	movw	r28, r30
    1142:	0e 94 b0 07 	call	0xf60	; 0xf60 <__mulsf3x>
    1146:	fe 01       	movw	r30, r28
    1148:	e8 94       	clt
    114a:	a5 91       	lpm	r26, Z+
    114c:	25 91       	lpm	r18, Z+
    114e:	35 91       	lpm	r19, Z+
    1150:	45 91       	lpm	r20, Z+
    1152:	55 91       	lpm	r21, Z+
    1154:	a6 f3       	brts	.-24     	; 0x113e <__fp_powser+0x16>
    1156:	ef 01       	movw	r28, r30
    1158:	0e 94 19 06 	call	0xc32	; 0xc32 <__addsf3x>
    115c:	fe 01       	movw	r30, r28
    115e:	97 01       	movw	r18, r14
    1160:	a8 01       	movw	r20, r16
    1162:	da 94       	dec	r13
    1164:	69 f7       	brne	.-38     	; 0x1140 <__fp_powser+0x18>
    1166:	df 90       	pop	r13
    1168:	ef 90       	pop	r14
    116a:	ff 90       	pop	r15
    116c:	0f 91       	pop	r16
    116e:	1f 91       	pop	r17
    1170:	cf 91       	pop	r28
    1172:	df 91       	pop	r29
    1174:	08 95       	ret

00001176 <inverse>:
    1176:	9b 01       	movw	r18, r22
    1178:	ac 01       	movw	r20, r24
    117a:	60 e0       	ldi	r22, 0x00	; 0
    117c:	70 e0       	ldi	r23, 0x00	; 0
    117e:	80 e8       	ldi	r24, 0x80	; 128
    1180:	9f e3       	ldi	r25, 0x3F	; 63
    1182:	0c 94 6e 06 	jmp	0xcdc	; 0xcdc <__divsf3>
    1186:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>
    118a:	0c 94 81 09 	jmp	0x1302	; 0x1302 <__fp_mpack>

0000118e <ldexp>:
    118e:	0e 94 7c 07 	call	0xef8	; 0xef8 <__fp_splitA>
    1192:	d8 f3       	brcs	.-10     	; 0x118a <inverse+0x14>
    1194:	99 23       	and	r25, r25
    1196:	c9 f3       	breq	.-14     	; 0x118a <inverse+0x14>
    1198:	94 0f       	add	r25, r20
    119a:	51 1d       	adc	r21, r1
    119c:	a3 f3       	brvs	.-24     	; 0x1186 <inverse+0x10>
    119e:	91 50       	subi	r25, 0x01	; 1
    11a0:	50 40       	sbci	r21, 0x00	; 0
    11a2:	94 f0       	brlt	.+36     	; 0x11c8 <ldexp+0x3a>
    11a4:	59 f0       	breq	.+22     	; 0x11bc <ldexp+0x2e>
    11a6:	88 23       	and	r24, r24
    11a8:	32 f0       	brmi	.+12     	; 0x11b6 <ldexp+0x28>
    11aa:	66 0f       	add	r22, r22
    11ac:	77 1f       	adc	r23, r23
    11ae:	88 1f       	adc	r24, r24
    11b0:	91 50       	subi	r25, 0x01	; 1
    11b2:	50 40       	sbci	r21, 0x00	; 0
    11b4:	c1 f7       	brne	.-16     	; 0x11a6 <ldexp+0x18>
    11b6:	9e 3f       	cpi	r25, 0xFE	; 254
    11b8:	51 05       	cpc	r21, r1
    11ba:	2c f7       	brge	.-54     	; 0x1186 <inverse+0x10>
    11bc:	88 0f       	add	r24, r24
    11be:	91 1d       	adc	r25, r1
    11c0:	96 95       	lsr	r25
    11c2:	87 95       	ror	r24
    11c4:	97 f9       	bld	r25, 7
    11c6:	08 95       	ret
    11c8:	5f 3f       	cpi	r21, 0xFF	; 255
    11ca:	ac f0       	brlt	.+42     	; 0x11f6 <ldexp+0x68>
    11cc:	98 3e       	cpi	r25, 0xE8	; 232
    11ce:	9c f0       	brlt	.+38     	; 0x11f6 <ldexp+0x68>
    11d0:	bb 27       	eor	r27, r27
    11d2:	86 95       	lsr	r24
    11d4:	77 95       	ror	r23
    11d6:	67 95       	ror	r22
    11d8:	b7 95       	ror	r27
    11da:	08 f4       	brcc	.+2      	; 0x11de <ldexp+0x50>
    11dc:	b1 60       	ori	r27, 0x01	; 1
    11de:	93 95       	inc	r25
    11e0:	c1 f7       	brne	.-16     	; 0x11d2 <ldexp+0x44>
    11e2:	bb 0f       	add	r27, r27
    11e4:	58 f7       	brcc	.-42     	; 0x11bc <ldexp+0x2e>
    11e6:	11 f4       	brne	.+4      	; 0x11ec <ldexp+0x5e>
    11e8:	60 ff       	sbrs	r22, 0
    11ea:	e8 cf       	rjmp	.-48     	; 0x11bc <ldexp+0x2e>
    11ec:	6f 5f       	subi	r22, 0xFF	; 255
    11ee:	7f 4f       	sbci	r23, 0xFF	; 255
    11f0:	8f 4f       	sbci	r24, 0xFF	; 255
    11f2:	9f 4f       	sbci	r25, 0xFF	; 255
    11f4:	e3 cf       	rjmp	.-58     	; 0x11bc <ldexp+0x2e>
    11f6:	0c 94 97 07 	jmp	0xf2e	; 0xf2e <__fp_szero>
    11fa:	16 f0       	brts	.+4      	; 0x1200 <ldexp+0x72>
    11fc:	0c 94 81 09 	jmp	0x1302	; 0x1302 <__fp_mpack>
    1200:	0c 94 52 07 	jmp	0xea4	; 0xea4 <__fp_nan>
    1204:	68 94       	set
    1206:	0c 94 4c 07 	jmp	0xe98	; 0xe98 <__fp_inf>

0000120a <log>:
    120a:	0e 94 7c 07 	call	0xef8	; 0xef8 <__fp_splitA>
    120e:	a8 f3       	brcs	.-22     	; 0x11fa <ldexp+0x6c>
    1210:	99 23       	and	r25, r25
    1212:	c1 f3       	breq	.-16     	; 0x1204 <ldexp+0x76>
    1214:	ae f3       	brts	.-22     	; 0x1200 <ldexp+0x72>
    1216:	df 93       	push	r29
    1218:	cf 93       	push	r28
    121a:	1f 93       	push	r17
    121c:	0f 93       	push	r16
    121e:	ff 92       	push	r15
    1220:	c9 2f       	mov	r28, r25
    1222:	dd 27       	eor	r29, r29
    1224:	88 23       	and	r24, r24
    1226:	2a f0       	brmi	.+10     	; 0x1232 <log+0x28>
    1228:	21 97       	sbiw	r28, 0x01	; 1
    122a:	66 0f       	add	r22, r22
    122c:	77 1f       	adc	r23, r23
    122e:	88 1f       	adc	r24, r24
    1230:	da f7       	brpl	.-10     	; 0x1228 <log+0x1e>
    1232:	20 e0       	ldi	r18, 0x00	; 0
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	40 e8       	ldi	r20, 0x80	; 128
    1238:	5f eb       	ldi	r21, 0xBF	; 191
    123a:	9f e3       	ldi	r25, 0x3F	; 63
    123c:	88 39       	cpi	r24, 0x98	; 152
    123e:	20 f0       	brcs	.+8      	; 0x1248 <log+0x3e>
    1240:	80 3e       	cpi	r24, 0xE0	; 224
    1242:	38 f0       	brcs	.+14     	; 0x1252 <log+0x48>
    1244:	21 96       	adiw	r28, 0x01	; 1
    1246:	8f 77       	andi	r24, 0x7F	; 127
    1248:	0e 94 02 06 	call	0xc04	; 0xc04 <__addsf3>
    124c:	ec ed       	ldi	r30, 0xDC	; 220
    124e:	f0 e0       	ldi	r31, 0x00	; 0
    1250:	04 c0       	rjmp	.+8      	; 0x125a <log+0x50>
    1252:	0e 94 02 06 	call	0xc04	; 0xc04 <__addsf3>
    1256:	e9 e0       	ldi	r30, 0x09	; 9
    1258:	f1 e0       	ldi	r31, 0x01	; 1
    125a:	0e 94 94 08 	call	0x1128	; 0x1128 <__fp_powser>
    125e:	8b 01       	movw	r16, r22
    1260:	be 01       	movw	r22, r28
    1262:	ec 01       	movw	r28, r24
    1264:	fb 2e       	mov	r15, r27
    1266:	6f 57       	subi	r22, 0x7F	; 127
    1268:	71 09       	sbc	r23, r1
    126a:	75 95       	asr	r23
    126c:	77 1f       	adc	r23, r23
    126e:	88 0b       	sbc	r24, r24
    1270:	99 0b       	sbc	r25, r25
    1272:	0e 94 11 07 	call	0xe22	; 0xe22 <__floatsisf>
    1276:	28 e1       	ldi	r18, 0x18	; 24
    1278:	32 e7       	ldi	r19, 0x72	; 114
    127a:	41 e3       	ldi	r20, 0x31	; 49
    127c:	5f e3       	ldi	r21, 0x3F	; 63
    127e:	0e 94 b0 07 	call	0xf60	; 0xf60 <__mulsf3x>
    1282:	af 2d       	mov	r26, r15
    1284:	98 01       	movw	r18, r16
    1286:	ae 01       	movw	r20, r28
    1288:	ff 90       	pop	r15
    128a:	0f 91       	pop	r16
    128c:	1f 91       	pop	r17
    128e:	cf 91       	pop	r28
    1290:	df 91       	pop	r29
    1292:	0e 94 19 06 	call	0xc32	; 0xc32 <__addsf3x>
    1296:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__fp_round>

0000129a <modf>:
    129a:	fa 01       	movw	r30, r20
    129c:	dc 01       	movw	r26, r24
    129e:	aa 0f       	add	r26, r26
    12a0:	bb 1f       	adc	r27, r27
    12a2:	9b 01       	movw	r18, r22
    12a4:	ac 01       	movw	r20, r24
    12a6:	bf 57       	subi	r27, 0x7F	; 127
    12a8:	28 f4       	brcc	.+10     	; 0x12b4 <modf+0x1a>
    12aa:	22 27       	eor	r18, r18
    12ac:	33 27       	eor	r19, r19
    12ae:	44 27       	eor	r20, r20
    12b0:	50 78       	andi	r21, 0x80	; 128
    12b2:	20 c0       	rjmp	.+64     	; 0x12f4 <modf+0x5a>
    12b4:	b7 51       	subi	r27, 0x17	; 23
    12b6:	90 f4       	brcc	.+36     	; 0x12dc <modf+0x42>
    12b8:	ab 2f       	mov	r26, r27
    12ba:	00 24       	eor	r0, r0
    12bc:	46 95       	lsr	r20
    12be:	37 95       	ror	r19
    12c0:	27 95       	ror	r18
    12c2:	01 1c       	adc	r0, r1
    12c4:	a3 95       	inc	r26
    12c6:	d2 f3       	brmi	.-12     	; 0x12bc <modf+0x22>
    12c8:	00 20       	and	r0, r0
    12ca:	71 f0       	breq	.+28     	; 0x12e8 <modf+0x4e>
    12cc:	22 0f       	add	r18, r18
    12ce:	33 1f       	adc	r19, r19
    12d0:	44 1f       	adc	r20, r20
    12d2:	b3 95       	inc	r27
    12d4:	da f3       	brmi	.-10     	; 0x12cc <modf+0x32>
    12d6:	0e d0       	rcall	.+28     	; 0x12f4 <modf+0x5a>
    12d8:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__subsf3>
    12dc:	61 30       	cpi	r22, 0x01	; 1
    12de:	71 05       	cpc	r23, r1
    12e0:	a0 e8       	ldi	r26, 0x80	; 128
    12e2:	8a 07       	cpc	r24, r26
    12e4:	b9 46       	sbci	r27, 0x69	; 105
    12e6:	30 f4       	brcc	.+12     	; 0x12f4 <modf+0x5a>
    12e8:	9b 01       	movw	r18, r22
    12ea:	ac 01       	movw	r20, r24
    12ec:	66 27       	eor	r22, r22
    12ee:	77 27       	eor	r23, r23
    12f0:	88 27       	eor	r24, r24
    12f2:	90 78       	andi	r25, 0x80	; 128
    12f4:	30 96       	adiw	r30, 0x00	; 0
    12f6:	21 f0       	breq	.+8      	; 0x1300 <modf+0x66>
    12f8:	20 83       	st	Z, r18
    12fa:	31 83       	std	Z+1, r19	; 0x01
    12fc:	42 83       	std	Z+2, r20	; 0x02
    12fe:	53 83       	std	Z+3, r21	; 0x03
    1300:	08 95       	ret

00001302 <__fp_mpack>:
    1302:	9f 3f       	cpi	r25, 0xFF	; 255
    1304:	31 f0       	breq	.+12     	; 0x1312 <__fp_mpack_finite+0xc>

00001306 <__fp_mpack_finite>:
    1306:	91 50       	subi	r25, 0x01	; 1
    1308:	20 f4       	brcc	.+8      	; 0x1312 <__fp_mpack_finite+0xc>
    130a:	87 95       	ror	r24
    130c:	77 95       	ror	r23
    130e:	67 95       	ror	r22
    1310:	b7 95       	ror	r27
    1312:	88 0f       	add	r24, r24
    1314:	91 1d       	adc	r25, r1
    1316:	96 95       	lsr	r25
    1318:	87 95       	ror	r24
    131a:	97 f9       	bld	r25, 7
    131c:	08 95       	ret

0000131e <__udivmodhi4>:
    131e:	aa 1b       	sub	r26, r26
    1320:	bb 1b       	sub	r27, r27
    1322:	51 e1       	ldi	r21, 0x11	; 17
    1324:	07 c0       	rjmp	.+14     	; 0x1334 <__udivmodhi4_ep>

00001326 <__udivmodhi4_loop>:
    1326:	aa 1f       	adc	r26, r26
    1328:	bb 1f       	adc	r27, r27
    132a:	a6 17       	cp	r26, r22
    132c:	b7 07       	cpc	r27, r23
    132e:	10 f0       	brcs	.+4      	; 0x1334 <__udivmodhi4_ep>
    1330:	a6 1b       	sub	r26, r22
    1332:	b7 0b       	sbc	r27, r23

00001334 <__udivmodhi4_ep>:
    1334:	88 1f       	adc	r24, r24
    1336:	99 1f       	adc	r25, r25
    1338:	5a 95       	dec	r21
    133a:	a9 f7       	brne	.-22     	; 0x1326 <__udivmodhi4_loop>
    133c:	80 95       	com	r24
    133e:	90 95       	com	r25
    1340:	bc 01       	movw	r22, r24
    1342:	cd 01       	movw	r24, r26
    1344:	08 95       	ret

00001346 <__umulhisi3>:
    1346:	a2 9f       	mul	r26, r18
    1348:	b0 01       	movw	r22, r0
    134a:	b3 9f       	mul	r27, r19
    134c:	c0 01       	movw	r24, r0
    134e:	a3 9f       	mul	r26, r19
    1350:	70 0d       	add	r23, r0
    1352:	81 1d       	adc	r24, r1
    1354:	11 24       	eor	r1, r1
    1356:	91 1d       	adc	r25, r1
    1358:	b2 9f       	mul	r27, r18
    135a:	70 0d       	add	r23, r0
    135c:	81 1d       	adc	r24, r1
    135e:	11 24       	eor	r1, r1
    1360:	91 1d       	adc	r25, r1
    1362:	08 95       	ret

00001364 <_exit>:
    1364:	f8 94       	cli

00001366 <__stop_program>:
    1366:	ff cf       	rjmp	.-2      	; 0x1366 <__stop_program>
